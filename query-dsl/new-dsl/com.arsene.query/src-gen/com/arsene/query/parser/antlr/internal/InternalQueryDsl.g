/*
 * generated by Xtext 2.25.0
 */
grammar InternalQueryDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package com.arsene.query.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.arsene.query.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.arsene.query.services.QueryDslGrammarAccess;

}

@parser::members {

 	private QueryDslGrammarAccess grammarAccess;

    public InternalQueryDslParser(TokenStream input, QueryDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "QueryModel";
   	}

   	@Override
   	protected QueryDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleQueryModel
entryRuleQueryModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQueryModelRule()); }
	iv_ruleQueryModel=ruleQueryModel
	{ $current=$iv_ruleQueryModel.current; }
	EOF;

// Rule QueryModel
ruleQueryModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getQueryModelAccess().getElementsAbstractElementParserRuleCall_0());
			}
			lv_elements_0_0=ruleAbstractElement
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getQueryModelRule());
				}
				add(
					$current,
					"elements",
					lv_elements_0_0,
					"com.arsene.query.QueryDsl.AbstractElement");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleAbstractElement
entryRuleAbstractElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractElementRule()); }
	iv_ruleAbstractElement=ruleAbstractElement
	{ $current=$iv_ruleAbstractElement.current; }
	EOF;

// Rule AbstractElement
ruleAbstractElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getVariableParserRuleCall_0());
		}
		this_Variable_0=ruleVariable
		{
			$current = $this_Variable_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getUserParserRuleCall_1());
		}
		this_User_1=ruleUser
		{
			$current = $this_User_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getWorkspaceParserRuleCall_2());
		}
		this_Workspace_2=ruleWorkspace
		{
			$current = $this_Workspace_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getProjectParserRuleCall_3());
		}
		this_Project_3=ruleProject
		{
			$current = $this_Project_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getMetamodelParserRuleCall_4());
		}
		this_Metamodel_4=ruleMetamodel
		{
			$current = $this_Metamodel_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getModelParserRuleCall_5());
		}
		this_Model_5=ruleModel
		{
			$current = $this_Model_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getDslParserRuleCall_6());
		}
		this_Dsl_6=ruleDsl
		{
			$current = $this_Dsl_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleUser
entryRuleUser returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUserRule()); }
	iv_ruleUser=ruleUser
	{ $current=$iv_ruleUser.current; }
	EOF;

// Rule User
ruleUser returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Query'
		{
			newLeafNode(otherlv_0, grammarAccess.getUserAccess().getQueryKeyword_0());
		}
		otherlv_1='User'
		{
			newLeafNode(otherlv_1, grammarAccess.getUserAccess().getUserKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getUserAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUserAccess().getUservarUserVarParserRuleCall_3_0());
				}
				lv_uservar_3_0=ruleUserVar
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUserRule());
					}
					set(
						$current,
						"uservar",
						lv_uservar_3_0,
						"com.arsene.query.QueryDsl.UserVar");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getUserAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUserAccess().getUservarsUserVarParserRuleCall_4_1_0());
					}
					lv_uservars_5_0=ruleUserVar
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUserRule());
						}
						add(
							$current,
							"uservars",
							lv_uservars_5_0,
							"com.arsene.query.QueryDsl.UserVar");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getUserAccess().getRightParenthesisKeyword_5());
		}
		otherlv_7='return'
		{
			newLeafNode(otherlv_7, grammarAccess.getUserAccess().getReturnKeyword_6());
		}
		otherlv_8='['
		{
			newLeafNode(otherlv_8, grammarAccess.getUserAccess().getLeftSquareBracketKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUserAccess().getFieldUserFieldParserRuleCall_8_0());
				}
				lv_field_9_0=ruleUserField
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUserRule());
					}
					set(
						$current,
						"field",
						lv_field_9_0,
						"com.arsene.query.QueryDsl.UserField");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_10=','
			{
				newLeafNode(otherlv_10, grammarAccess.getUserAccess().getCommaKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUserAccess().getFieldsUserFieldParserRuleCall_9_1_0());
					}
					lv_fields_11_0=ruleUserField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUserRule());
						}
						add(
							$current,
							"fields",
							lv_fields_11_0,
							"com.arsene.query.QueryDsl.UserField");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_12=']'
		{
			newLeafNode(otherlv_12, grammarAccess.getUserAccess().getRightSquareBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleWorkspace
entryRuleWorkspace returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWorkspaceRule()); }
	iv_ruleWorkspace=ruleWorkspace
	{ $current=$iv_ruleWorkspace.current; }
	EOF;

// Rule Workspace
ruleWorkspace returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Query'
		{
			newLeafNode(otherlv_0, grammarAccess.getWorkspaceAccess().getQueryKeyword_0());
		}
		otherlv_1='Workspace'
		{
			newLeafNode(otherlv_1, grammarAccess.getWorkspaceAccess().getWorkspaceKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getWorkspaceAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWorkspaceAccess().getSpacevarWorkspaceVarParserRuleCall_3_0());
				}
				lv_spacevar_3_0=ruleWorkspaceVar
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWorkspaceRule());
					}
					set(
						$current,
						"spacevar",
						lv_spacevar_3_0,
						"com.arsene.query.QueryDsl.WorkspaceVar");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getWorkspaceAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWorkspaceAccess().getSpacevarsWorkspaceVarParserRuleCall_4_1_0());
					}
					lv_spacevars_5_0=ruleWorkspaceVar
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWorkspaceRule());
						}
						add(
							$current,
							"spacevars",
							lv_spacevars_5_0,
							"com.arsene.query.QueryDsl.WorkspaceVar");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getWorkspaceAccess().getRightParenthesisKeyword_5());
		}
		otherlv_7='return'
		{
			newLeafNode(otherlv_7, grammarAccess.getWorkspaceAccess().getReturnKeyword_6());
		}
		otherlv_8='['
		{
			newLeafNode(otherlv_8, grammarAccess.getWorkspaceAccess().getLeftSquareBracketKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWorkspaceAccess().getFieldWorkspaceFieldParserRuleCall_8_0());
				}
				lv_field_9_0=ruleWorkspaceField
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWorkspaceRule());
					}
					set(
						$current,
						"field",
						lv_field_9_0,
						"com.arsene.query.QueryDsl.WorkspaceField");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_10=','
			{
				newLeafNode(otherlv_10, grammarAccess.getWorkspaceAccess().getCommaKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWorkspaceAccess().getFieldsWorkspaceFieldParserRuleCall_9_1_0());
					}
					lv_fields_11_0=ruleWorkspaceField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWorkspaceRule());
						}
						add(
							$current,
							"fields",
							lv_fields_11_0,
							"com.arsene.query.QueryDsl.WorkspaceField");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_12=']'
		{
			newLeafNode(otherlv_12, grammarAccess.getWorkspaceAccess().getRightSquareBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleProject
entryRuleProject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProjectRule()); }
	iv_ruleProject=ruleProject
	{ $current=$iv_ruleProject.current; }
	EOF;

// Rule Project
ruleProject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Query'
		{
			newLeafNode(otherlv_0, grammarAccess.getProjectAccess().getQueryKeyword_0());
		}
		otherlv_1='Project'
		{
			newLeafNode(otherlv_1, grammarAccess.getProjectAccess().getProjectKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getProjectAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProjectAccess().getProjectvarProjectVarParserRuleCall_3_0());
				}
				lv_projectvar_3_0=ruleProjectVar
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProjectRule());
					}
					set(
						$current,
						"projectvar",
						lv_projectvar_3_0,
						"com.arsene.query.QueryDsl.ProjectVar");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getProjectAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProjectAccess().getProjectvarsProjectVarParserRuleCall_4_1_0());
					}
					lv_projectvars_5_0=ruleProjectVar
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProjectRule());
						}
						add(
							$current,
							"projectvars",
							lv_projectvars_5_0,
							"com.arsene.query.QueryDsl.ProjectVar");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getProjectAccess().getRightParenthesisKeyword_5());
		}
		otherlv_7='return'
		{
			newLeafNode(otherlv_7, grammarAccess.getProjectAccess().getReturnKeyword_6());
		}
		otherlv_8='['
		{
			newLeafNode(otherlv_8, grammarAccess.getProjectAccess().getLeftSquareBracketKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProjectAccess().getFieldProjectFieldParserRuleCall_8_0());
				}
				lv_field_9_0=ruleProjectField
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProjectRule());
					}
					set(
						$current,
						"field",
						lv_field_9_0,
						"com.arsene.query.QueryDsl.ProjectField");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_10=','
			{
				newLeafNode(otherlv_10, grammarAccess.getProjectAccess().getCommaKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProjectAccess().getFieldsProjectFieldParserRuleCall_9_1_0());
					}
					lv_fields_11_0=ruleProjectField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProjectRule());
						}
						add(
							$current,
							"fields",
							lv_fields_11_0,
							"com.arsene.query.QueryDsl.ProjectField");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_12=']'
		{
			newLeafNode(otherlv_12, grammarAccess.getProjectAccess().getRightSquareBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleMetamodel
entryRuleMetamodel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetamodelRule()); }
	iv_ruleMetamodel=ruleMetamodel
	{ $current=$iv_ruleMetamodel.current; }
	EOF;

// Rule Metamodel
ruleMetamodel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Query'
		{
			newLeafNode(otherlv_0, grammarAccess.getMetamodelAccess().getQueryKeyword_0());
		}
		otherlv_1='Metamodel'
		{
			newLeafNode(otherlv_1, grammarAccess.getMetamodelAccess().getMetamodelKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getMetamodelAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMetamodelAccess().getMetamodelVarMetamodelVarParserRuleCall_3_0());
				}
				lv_metamodelVar_3_0=ruleMetamodelVar
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMetamodelRule());
					}
					set(
						$current,
						"metamodelVar",
						lv_metamodelVar_3_0,
						"com.arsene.query.QueryDsl.MetamodelVar");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getMetamodelAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMetamodelAccess().getMetamodelVarsMetamodelVarParserRuleCall_4_1_0());
					}
					lv_metamodelVars_5_0=ruleMetamodelVar
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMetamodelRule());
						}
						add(
							$current,
							"metamodelVars",
							lv_metamodelVars_5_0,
							"com.arsene.query.QueryDsl.MetamodelVar");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getMetamodelAccess().getRightParenthesisKeyword_5());
		}
		(
			otherlv_7='=>'
			{
				newLeafNode(otherlv_7, grammarAccess.getMetamodelAccess().getEqualsSignGreaterThanSignKeyword_6_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getMetamodelAccess().getSyntaxMicroSyntaxParserRuleCall_6_1_0_0());
						}
						lv_syntax_8_0=ruleMicroSyntax
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMetamodelRule());
							}
							set(
								$current,
								"syntax",
								lv_syntax_8_0,
								"com.arsene.query.QueryDsl.MicroSyntax");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getMetamodelAccess().getTextSearchFullTextSearchParserRuleCall_6_1_1_0());
						}
						lv_textSearch_9_0=ruleFullTextSearch
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMetamodelRule());
							}
							set(
								$current,
								"textSearch",
								lv_textSearch_9_0,
								"com.arsene.query.QueryDsl.FullTextSearch");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getMetamodelAccess().getFilterFilterParserRuleCall_6_1_2_0());
						}
						lv_filter_10_0=ruleFilter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMetamodelRule());
							}
							set(
								$current,
								"filter",
								lv_filter_10_0,
								"com.arsene.query.QueryDsl.Filter");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getMetamodelAccess().getQmQualityMetricParserRuleCall_6_1_3_0());
						}
						lv_qm_11_0=ruleQualityMetric
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMetamodelRule());
							}
							set(
								$current,
								"qm",
								lv_qm_11_0,
								"com.arsene.query.QueryDsl.QualityMetric");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getMetamodelAccess().getTransfoTransformableParserRuleCall_6_1_4_0());
						}
						lv_transfo_12_0=ruleTransformable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMetamodelRule());
							}
							set(
								$current,
								"transfo",
								lv_transfo_12_0,
								"com.arsene.query.QueryDsl.Transformable");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
		otherlv_13='return'
		{
			newLeafNode(otherlv_13, grammarAccess.getMetamodelAccess().getReturnKeyword_7());
		}
		otherlv_14='['
		{
			newLeafNode(otherlv_14, grammarAccess.getMetamodelAccess().getLeftSquareBracketKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMetamodelAccess().getFieldMetamodelFieldParserRuleCall_9_0());
				}
				lv_field_15_0=ruleMetamodelField
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMetamodelRule());
					}
					set(
						$current,
						"field",
						lv_field_15_0,
						"com.arsene.query.QueryDsl.MetamodelField");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_16=','
			{
				newLeafNode(otherlv_16, grammarAccess.getMetamodelAccess().getCommaKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMetamodelAccess().getFieldsMetamodelFieldParserRuleCall_10_1_0());
					}
					lv_fields_17_0=ruleMetamodelField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMetamodelRule());
						}
						add(
							$current,
							"fields",
							lv_fields_17_0,
							"com.arsene.query.QueryDsl.MetamodelField");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_18=']'
		{
			newLeafNode(otherlv_18, grammarAccess.getMetamodelAccess().getRightSquareBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Query'
		{
			newLeafNode(otherlv_0, grammarAccess.getModelAccess().getQueryKeyword_0());
		}
		otherlv_1='Model'
		{
			newLeafNode(otherlv_1, grammarAccess.getModelAccess().getModelKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getModelAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getModelVarModelVarParserRuleCall_3_0());
				}
				lv_modelVar_3_0=ruleModelVar
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"modelVar",
						lv_modelVar_3_0,
						"com.arsene.query.QueryDsl.ModelVar");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getModelAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getModelVarsModelVarParserRuleCall_4_1_0());
					}
					lv_modelVars_5_0=ruleModelVar
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"modelVars",
							lv_modelVars_5_0,
							"com.arsene.query.QueryDsl.ModelVar");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getModelAccess().getRightParenthesisKeyword_5());
		}
		(
			otherlv_7='=>'
			{
				newLeafNode(otherlv_7, grammarAccess.getModelAccess().getEqualsSignGreaterThanSignKeyword_6_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getModelAccess().getSyntaxMicroSyntaxParserRuleCall_6_1_0_0());
						}
						lv_syntax_8_0=ruleMicroSyntax
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModelRule());
							}
							set(
								$current,
								"syntax",
								lv_syntax_8_0,
								"com.arsene.query.QueryDsl.MicroSyntax");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getModelAccess().getTextSearchFullTextSearchParserRuleCall_6_1_1_0());
						}
						lv_textSearch_9_0=ruleFullTextSearch
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModelRule());
							}
							set(
								$current,
								"textSearch",
								lv_textSearch_9_0,
								"com.arsene.query.QueryDsl.FullTextSearch");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getModelAccess().getFilterFilterParserRuleCall_6_1_2_0());
						}
						lv_filter_10_0=ruleFilter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModelRule());
							}
							set(
								$current,
								"filter",
								lv_filter_10_0,
								"com.arsene.query.QueryDsl.Filter");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getModelAccess().getQModelQueryParserRuleCall_6_1_3_0());
						}
						lv_q_11_0=ruleModelQuery
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModelRule());
							}
							set(
								$current,
								"q",
								lv_q_11_0,
								"com.arsene.query.QueryDsl.ModelQuery");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
		otherlv_12='return'
		{
			newLeafNode(otherlv_12, grammarAccess.getModelAccess().getReturnKeyword_7());
		}
		otherlv_13='['
		{
			newLeafNode(otherlv_13, grammarAccess.getModelAccess().getLeftSquareBracketKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getFieldModelFieldParserRuleCall_9_0());
				}
				lv_field_14_0=ruleModelField
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"field",
						lv_field_14_0,
						"com.arsene.query.QueryDsl.ModelField");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_15=','
			{
				newLeafNode(otherlv_15, grammarAccess.getModelAccess().getCommaKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getFieldsModelFieldParserRuleCall_10_1_0());
					}
					lv_fields_16_0=ruleModelField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"fields",
							lv_fields_16_0,
							"com.arsene.query.QueryDsl.ModelField");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_17=']'
		{
			newLeafNode(otherlv_17, grammarAccess.getModelAccess().getRightSquareBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleDsl
entryRuleDsl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDslRule()); }
	iv_ruleDsl=ruleDsl
	{ $current=$iv_ruleDsl.current; }
	EOF;

// Rule Dsl
ruleDsl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Query'
		{
			newLeafNode(otherlv_0, grammarAccess.getDslAccess().getQueryKeyword_0());
		}
		otherlv_1='Dsl'
		{
			newLeafNode(otherlv_1, grammarAccess.getDslAccess().getDslKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getDslAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDslAccess().getDslVarDslVarParserRuleCall_3_0());
				}
				lv_dslVar_3_0=ruleDslVar
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDslRule());
					}
					set(
						$current,
						"dslVar",
						lv_dslVar_3_0,
						"com.arsene.query.QueryDsl.DslVar");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getDslAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDslAccess().getDslVarsDslVarParserRuleCall_4_1_0());
					}
					lv_dslVars_5_0=ruleDslVar
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDslRule());
						}
						add(
							$current,
							"dslVars",
							lv_dslVars_5_0,
							"com.arsene.query.QueryDsl.DslVar");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getDslAccess().getRightParenthesisKeyword_5());
		}
		(
			otherlv_7='=>'
			{
				newLeafNode(otherlv_7, grammarAccess.getDslAccess().getEqualsSignGreaterThanSignKeyword_6_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getDslAccess().getSyntaxMicroSyntaxParserRuleCall_6_1_0_0());
						}
						lv_syntax_8_0=ruleMicroSyntax
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDslRule());
							}
							set(
								$current,
								"syntax",
								lv_syntax_8_0,
								"com.arsene.query.QueryDsl.MicroSyntax");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getDslAccess().getTextSearchFullTextSearchParserRuleCall_6_1_1_0());
						}
						lv_textSearch_9_0=ruleFullTextSearch
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDslRule());
							}
							set(
								$current,
								"textSearch",
								lv_textSearch_9_0,
								"com.arsene.query.QueryDsl.FullTextSearch");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getDslAccess().getFilterFilterParserRuleCall_6_1_2_0());
						}
						lv_filter_10_0=ruleFilter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDslRule());
							}
							set(
								$current,
								"filter",
								lv_filter_10_0,
								"com.arsene.query.QueryDsl.Filter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
		otherlv_11='return'
		{
			newLeafNode(otherlv_11, grammarAccess.getDslAccess().getReturnKeyword_7());
		}
		otherlv_12='['
		{
			newLeafNode(otherlv_12, grammarAccess.getDslAccess().getLeftSquareBracketKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDslAccess().getFieldDslFieldParserRuleCall_9_0());
				}
				lv_field_13_0=ruleDslField
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDslRule());
					}
					set(
						$current,
						"field",
						lv_field_13_0,
						"com.arsene.query.QueryDsl.DslField");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_14=','
			{
				newLeafNode(otherlv_14, grammarAccess.getDslAccess().getCommaKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDslAccess().getFieldsDslFieldParserRuleCall_10_1_0());
					}
					lv_fields_15_0=ruleDslField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDslRule());
						}
						add(
							$current,
							"fields",
							lv_fields_15_0,
							"com.arsene.query.QueryDsl.DslField");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_16=']'
		{
			newLeafNode(otherlv_16, grammarAccess.getDslAccess().getRightSquareBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleMicroSyntax
entryRuleMicroSyntax returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMicroSyntaxRule()); }
	iv_ruleMicroSyntax=ruleMicroSyntax
	{ $current=$iv_ruleMicroSyntax.current; }
	EOF;

// Rule MicroSyntax
ruleMicroSyntax returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='microSyntax'
		{
			newLeafNode(otherlv_0, grammarAccess.getMicroSyntaxAccess().getMicroSyntaxKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getMicroSyntaxAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMicroSyntaxAccess().getExpExpressionParserRuleCall_2_0());
				}
				lv_exp_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMicroSyntaxRule());
					}
					set(
						$current,
						"exp",
						lv_exp_2_0,
						"com.arsene.query.QueryDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getMicroSyntaxAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleModelQuery
entryRuleModelQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelQueryRule()); }
	iv_ruleModelQuery=ruleModelQuery
	{ $current=$iv_ruleModelQuery.current; }
	EOF;

// Rule ModelQuery
ruleModelQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='modelQuery'
		{
			newLeafNode(otherlv_0, grammarAccess.getModelQueryAccess().getModelQueryKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getModelQueryAccess().getLeftParenthesisKeyword_1());
		}
		otherlv_2='type'
		{
			newLeafNode(otherlv_2, grammarAccess.getModelQueryAccess().getTypeKeyword_2());
		}
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getModelQueryAccess().getColonKeyword_3());
		}
		{
			newCompositeNode(grammarAccess.getModelQueryAccess().getQueryLangParserRuleCall_4());
		}
		ruleQueryLang
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getModelQueryAccess().getCommaKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelQueryAccess().getExprExpressionParserRuleCall_6_0());
				}
				lv_expr_6_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelQueryRule());
					}
					set(
						$current,
						"expr",
						lv_expr_6_0,
						"com.arsene.query.QueryDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getModelQueryAccess().getRightParenthesisKeyword_7());
		}
	)
;

// Entry rule entryRuleQueryLang
entryRuleQueryLang returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQueryLangRule()); }
	iv_ruleQueryLang=ruleQueryLang
	{ $current=$iv_ruleQueryLang.current.getText(); }
	EOF;

// Rule QueryLang
ruleQueryLang returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='EOL'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getQueryLangAccess().getEOLKeyword_0());
		}
		    |
		kw='OCL'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getQueryLangAccess().getOCLKeyword_1());
		}
	)
;

// Entry rule entryRuleFullTextSearch
entryRuleFullTextSearch returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFullTextSearchRule()); }
	iv_ruleFullTextSearch=ruleFullTextSearch
	{ $current=$iv_ruleFullTextSearch.current; }
	EOF;

// Rule FullTextSearch
ruleFullTextSearch returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='fullTextSearch'
		{
			newLeafNode(otherlv_0, grammarAccess.getFullTextSearchAccess().getFullTextSearchKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getFullTextSearchAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFullTextSearchAccess().getExpExpressionParserRuleCall_2_0());
				}
				lv_exp_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFullTextSearchRule());
					}
					set(
						$current,
						"exp",
						lv_exp_2_0,
						"com.arsene.query.QueryDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getFullTextSearchAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFullTextSearchAccess().getExpsExpressionParserRuleCall_3_1_0());
					}
					lv_exps_4_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFullTextSearchRule());
						}
						add(
							$current,
							"exps",
							lv_exps_4_0,
							"com.arsene.query.QueryDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getFullTextSearchAccess().getCommaKeyword_4_0_0());
				}
				otherlv_6='min_match'
				{
					newLeafNode(otherlv_6, grammarAccess.getFullTextSearchAccess().getMin_matchKeyword_4_0_1());
				}
				otherlv_7=':'
				{
					newLeafNode(otherlv_7, grammarAccess.getFullTextSearchAccess().getColonKeyword_4_0_2());
				}
				this_INT_8=RULE_INT
				{
					newLeafNode(this_INT_8, grammarAccess.getFullTextSearchAccess().getINTTerminalRuleCall_4_0_3());
				}
			)
			    |
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getFullTextSearchAccess().getCommaKeyword_4_1_0());
				}
				otherlv_10='operator'
				{
					newLeafNode(otherlv_10, grammarAccess.getFullTextSearchAccess().getOperatorKeyword_4_1_1());
				}
				otherlv_11=':'
				{
					newLeafNode(otherlv_11, grammarAccess.getFullTextSearchAccess().getColonKeyword_4_1_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFullTextSearchAccess().getOpOperatorParserRuleCall_4_1_3_0());
						}
						lv_op_12_0=ruleOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFullTextSearchRule());
							}
							set(
								$current,
								"op",
								lv_op_12_0,
								"com.arsene.query.QueryDsl.Operator");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
		otherlv_13=')'
		{
			newLeafNode(otherlv_13, grammarAccess.getFullTextSearchAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleQualityMetric
entryRuleQualityMetric returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQualityMetricRule()); }
	iv_ruleQualityMetric=ruleQualityMetric
	{ $current=$iv_ruleQualityMetric.current; }
	EOF;

// Rule QualityMetric
ruleQualityMetric returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='qualityMetrics'
		{
			newLeafNode(otherlv_0, grammarAccess.getQualityMetricAccess().getQualityMetricsKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getQualityMetricAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getQualityMetricAccess().getQExpQExpParserRuleCall_2_0());
				}
				lv_qExp_2_0=ruleQExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQualityMetricRule());
					}
					set(
						$current,
						"qExp",
						lv_qExp_2_0,
						"com.arsene.query.QueryDsl.QExp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getQualityMetricAccess().getOperatorOperatorParserRuleCall_3_0_0());
					}
					lv_operator_3_0=ruleOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQualityMetricRule());
						}
						set(
							$current,
							"operator",
							lv_operator_3_0,
							"com.arsene.query.QueryDsl.Operator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getQualityMetricAccess().getQExpsQExpParserRuleCall_3_1_0());
					}
					lv_qExps_4_0=ruleQExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQualityMetricRule());
						}
						set(
							$current,
							"qExps",
							lv_qExps_4_0,
							"com.arsene.query.QueryDsl.QExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getQualityMetricAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleTransformable
entryRuleTransformable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransformableRule()); }
	iv_ruleTransformable=ruleTransformable
	{ $current=$iv_ruleTransformable.current; }
	EOF;

// Rule Transformable
ruleTransformable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='transformable'
		{
			newLeafNode(otherlv_0, grammarAccess.getTransformableAccess().getTransformableKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getTransformableAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTransformableAccess().getParamTransParamParserRuleCall_2_0_0());
					}
					lv_param_2_0=ruleTransParam
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransformableRule());
						}
						set(
							$current,
							"param",
							lv_param_2_0,
							"com.arsene.query.QueryDsl.TransParam");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getTransformableAccess().getColonKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransformableAccess().getExpExpressionParserRuleCall_2_2_0());
					}
					lv_exp_4_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransformableRule());
						}
						set(
							$current,
							"exp",
							lv_exp_4_0,
							"com.arsene.query.QueryDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getTransformableAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransformableAccess().getParamTransParamParserRuleCall_3_1_0());
					}
					lv_param_6_0=ruleTransParam
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransformableRule());
						}
						set(
							$current,
							"param",
							lv_param_6_0,
							"com.arsene.query.QueryDsl.TransParam");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7=':'
			{
				newLeafNode(otherlv_7, grammarAccess.getTransformableAccess().getColonKeyword_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransformableAccess().getExpExpressionParserRuleCall_3_3_0());
					}
					lv_exp_8_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransformableRule());
						}
						set(
							$current,
							"exp",
							lv_exp_8_0,
							"com.arsene.query.QueryDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getTransformableAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleTransParam
entryRuleTransParam returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransParamRule()); }
	iv_ruleTransParam=ruleTransParam
	{ $current=$iv_ruleTransParam.current; }
	EOF;

// Rule TransParam
ruleTransParam returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_1='id'
				{
					newLeafNode(lv_type_0_1, grammarAccess.getTransParamAccess().getTypeIdKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransParamRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_1, null);
				}
				    |
				lv_type_0_2='name'
				{
					newLeafNode(lv_type_0_2, grammarAccess.getTransParamAccess().getTypeNameKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransParamRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_2, null);
				}
			)
		)
	)
;

// Entry rule entryRuleQExp
entryRuleQExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQExpRule()); }
	iv_ruleQExp=ruleQExp
	{ $current=$iv_ruleQExp.current; }
	EOF;

// Rule QExp
ruleQExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getQExpAccess().getQAttrQattributeParserRuleCall_0_0());
				}
				lv_qAttr_0_0=ruleQattribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQExpRule());
					}
					set(
						$current,
						"qAttr",
						lv_qAttr_0_0,
						"com.arsene.query.QueryDsl.Qattribute");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getQExpAccess().getCompComparisonParserRuleCall_1_0());
				}
				lv_comp_1_0=ruleComparison
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQExpRule());
					}
					set(
						$current,
						"comp",
						lv_comp_1_0,
						"com.arsene.query.QueryDsl.Comparison");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_n_2_0=RULE_INT
				{
					newLeafNode(lv_n_2_0, grammarAccess.getQExpAccess().getNINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQExpRule());
					}
					setWithLastConsumed(
						$current,
						"n",
						lv_n_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleQattribute
entryRuleQattribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQattributeRule()); }
	iv_ruleQattribute=ruleQattribute
	{ $current=$iv_ruleQattribute.current; }
	EOF;

// Rule Qattribute
ruleQattribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_1='qa'
				{
					newLeafNode(lv_type_0_1, grammarAccess.getQattributeAccess().getTypeQaKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQattributeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_1, null);
				}
				    |
				lv_type_0_2='qb'
				{
					newLeafNode(lv_type_0_2, grammarAccess.getQattributeAccess().getTypeQbKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQattributeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_2, null);
				}
				    |
				lv_type_0_3='qc'
				{
					newLeafNode(lv_type_0_3, grammarAccess.getQattributeAccess().getTypeQcKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQattributeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_3, null);
				}
				    |
				lv_type_0_4='qd'
				{
					newLeafNode(lv_type_0_4, grammarAccess.getQattributeAccess().getTypeQdKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQattributeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_4, null);
				}
				    |
				lv_type_0_5='qe'
				{
					newLeafNode(lv_type_0_5, grammarAccess.getQattributeAccess().getTypeQeKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQattributeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_5, null);
				}
				    |
				lv_type_0_6='qf'
				{
					newLeafNode(lv_type_0_6, grammarAccess.getQattributeAccess().getTypeQfKeyword_0_5());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQattributeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_6, null);
				}
				    |
				lv_type_0_7='qg'
				{
					newLeafNode(lv_type_0_7, grammarAccess.getQattributeAccess().getTypeQgKeyword_0_6());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQattributeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_7, null);
				}
				    |
				lv_type_0_8='qh'
				{
					newLeafNode(lv_type_0_8, grammarAccess.getQattributeAccess().getTypeQhKeyword_0_7());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQattributeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_8, null);
				}
				    |
				lv_type_0_9='qi'
				{
					newLeafNode(lv_type_0_9, grammarAccess.getQattributeAccess().getTypeQiKeyword_0_8());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQattributeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_9, null);
				}
				    |
				lv_type_0_10='qj'
				{
					newLeafNode(lv_type_0_10, grammarAccess.getQattributeAccess().getTypeQjKeyword_0_9());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQattributeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_10, null);
				}
				    |
				lv_type_0_11='qk'
				{
					newLeafNode(lv_type_0_11, grammarAccess.getQattributeAccess().getTypeQkKeyword_0_10());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQattributeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_11, null);
				}
				    |
				lv_type_0_12='ql'
				{
					newLeafNode(lv_type_0_12, grammarAccess.getQattributeAccess().getTypeQlKeyword_0_11());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQattributeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_12, null);
				}
				    |
				lv_type_0_13='qm'
				{
					newLeafNode(lv_type_0_13, grammarAccess.getQattributeAccess().getTypeQmKeyword_0_12());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQattributeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_13, null);
				}
				    |
				lv_type_0_14='qn'
				{
					newLeafNode(lv_type_0_14, grammarAccess.getQattributeAccess().getTypeQnKeyword_0_13());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQattributeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_14, null);
				}
				    |
				lv_type_0_15='qo'
				{
					newLeafNode(lv_type_0_15, grammarAccess.getQattributeAccess().getTypeQoKeyword_0_14());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQattributeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_15, null);
				}
				    |
				lv_type_0_16='qp'
				{
					newLeafNode(lv_type_0_16, grammarAccess.getQattributeAccess().getTypeQpKeyword_0_15());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQattributeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_16, null);
				}
				    |
				lv_type_0_17='qq'
				{
					newLeafNode(lv_type_0_17, grammarAccess.getQattributeAccess().getTypeQqKeyword_0_16());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQattributeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_17, null);
				}
				    |
				lv_type_0_18='qr'
				{
					newLeafNode(lv_type_0_18, grammarAccess.getQattributeAccess().getTypeQrKeyword_0_17());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQattributeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_18, null);
				}
				    |
				lv_type_0_19='qs'
				{
					newLeafNode(lv_type_0_19, grammarAccess.getQattributeAccess().getTypeQsKeyword_0_18());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQattributeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_19, null);
				}
				    |
				lv_type_0_20='qt'
				{
					newLeafNode(lv_type_0_20, grammarAccess.getQattributeAccess().getTypeQtKeyword_0_19());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQattributeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_20, null);
				}
				    |
				lv_type_0_21='qu'
				{
					newLeafNode(lv_type_0_21, grammarAccess.getQattributeAccess().getTypeQuKeyword_0_20());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQattributeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_21, null);
				}
				    |
				lv_type_0_22='qv'
				{
					newLeafNode(lv_type_0_22, grammarAccess.getQattributeAccess().getTypeQvKeyword_0_21());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQattributeRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_22, null);
				}
			)
		)
	)
;

// Entry rule entryRuleOperator
entryRuleOperator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperatorRule()); }
	iv_ruleOperator=ruleOperator
	{ $current=$iv_ruleOperator.current; }
	EOF;

// Rule Operator
ruleOperator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_op_0_1='AND'
				{
					newLeafNode(lv_op_0_1, grammarAccess.getOperatorAccess().getOpANDKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperatorRule());
					}
					setWithLastConsumed($current, "op", lv_op_0_1, null);
				}
				    |
				lv_op_0_2='OR'
				{
					newLeafNode(lv_op_0_2, grammarAccess.getOperatorAccess().getOpORKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperatorRule());
					}
					setWithLastConsumed($current, "op", lv_op_0_2, null);
				}
				    |
				lv_op_0_3='EXACT'
				{
					newLeafNode(lv_op_0_3, grammarAccess.getOperatorAccess().getOpEXACTKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperatorRule());
					}
					setWithLastConsumed($current, "op", lv_op_0_3, null);
				}
			)
		)
	)
;

// Entry rule entryRuleFilter
entryRuleFilter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFilterRule()); }
	iv_ruleFilter=ruleFilter
	{ $current=$iv_ruleFilter.current; }
	EOF;

// Rule Filter
ruleFilter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='filter'
		{
			newLeafNode(otherlv_0, grammarAccess.getFilterAccess().getFilterKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getFilterAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFilterAccess().getFilterExpFilterExpParserRuleCall_2_0());
				}
				lv_filterExp_2_0=ruleFilterExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFilterRule());
					}
					set(
						$current,
						"filterExp",
						lv_filterExp_2_0,
						"com.arsene.query.QueryDsl.FilterExp");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getFilterAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFilterAccess().getFilterExpsFilterExpParserRuleCall_3_1_0());
					}
					lv_filterExps_4_0=ruleFilterExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFilterRule());
						}
						set(
							$current,
							"filterExps",
							lv_filterExps_4_0,
							"com.arsene.query.QueryDsl.FilterExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getFilterAccess().getCommaKeyword_4_0());
			}
			otherlv_6='size'
			{
				newLeafNode(otherlv_6, grammarAccess.getFilterAccess().getSizeKeyword_4_1());
			}
			otherlv_7=':'
			{
				newLeafNode(otherlv_7, grammarAccess.getFilterAccess().getColonKeyword_4_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFilterAccess().getCompComparisonParserRuleCall_4_3_0());
					}
					lv_comp_8_0=ruleComparison
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFilterRule());
						}
						set(
							$current,
							"comp",
							lv_comp_8_0,
							"com.arsene.query.QueryDsl.Comparison");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getFilterAccess().getExpExpressionParserRuleCall_4_4_0());
					}
					lv_exp_9_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFilterRule());
						}
						set(
							$current,
							"exp",
							lv_exp_9_0,
							"com.arsene.query.QueryDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_10=')'
		{
			newLeafNode(otherlv_10, grammarAccess.getFilterAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleFilterExp
entryRuleFilterExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFilterExpRule()); }
	iv_ruleFilterExp=ruleFilterExp
	{ $current=$iv_ruleFilterExp.current; }
	EOF;

// Rule FilterExp
ruleFilterExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFilterExpAccess().getFilterkeyFilterKeywordParserRuleCall_0_0());
				}
				lv_filterkey_0_0=ruleFilterKeyword
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFilterExpRule());
					}
					set(
						$current,
						"filterkey",
						lv_filterkey_0_0,
						"com.arsene.query.QueryDsl.FilterKeyword");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getFilterExpAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFilterExpAccess().getExpExpressionParserRuleCall_2_0());
				}
				lv_exp_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFilterExpRule());
					}
					set(
						$current,
						"exp",
						lv_exp_2_0,
						"com.arsene.query.QueryDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleComparison
entryRuleComparison returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparisonRule()); }
	iv_ruleComparison=ruleComparison
	{ $current=$iv_ruleComparison.current; }
	EOF;

// Rule Comparison
ruleComparison returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_1='=='
				{
					newLeafNode(lv_type_0_1, grammarAccess.getComparisonAccess().getTypeEqualsSignEqualsSignKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComparisonRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_1, null);
				}
				    |
				lv_type_0_2='>='
				{
					newLeafNode(lv_type_0_2, grammarAccess.getComparisonAccess().getTypeGreaterThanSignEqualsSignKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComparisonRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_2, null);
				}
				    |
				lv_type_0_3='<='
				{
					newLeafNode(lv_type_0_3, grammarAccess.getComparisonAccess().getTypeLessThanSignEqualsSignKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComparisonRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_3, null);
				}
				    |
				lv_type_0_4='<'
				{
					newLeafNode(lv_type_0_4, grammarAccess.getComparisonAccess().getTypeLessThanSignKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComparisonRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_4, null);
				}
				    |
				lv_type_0_5='>'
				{
					newLeafNode(lv_type_0_5, grammarAccess.getComparisonAccess().getTypeGreaterThanSignKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComparisonRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_5, null);
				}
			)
		)
	)
;

// Entry rule entryRuleFilterKeyword
entryRuleFilterKeyword returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFilterKeywordRule()); }
	iv_ruleFilterKeyword=ruleFilterKeyword
	{ $current=$iv_ruleFilterKeyword.current; }
	EOF;

// Rule FilterKeyword
ruleFilterKeyword returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_type_0_1='gte'
				{
					newLeafNode(lv_type_0_1, grammarAccess.getFilterKeywordAccess().getTypeGteKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFilterKeywordRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_1, null);
				}
				    |
				lv_type_0_2='lte'
				{
					newLeafNode(lv_type_0_2, grammarAccess.getFilterKeywordAccess().getTypeLteKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFilterKeywordRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_2, null);
				}
				    |
				lv_type_0_3='lt'
				{
					newLeafNode(lv_type_0_3, grammarAccess.getFilterKeywordAccess().getTypeLtKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFilterKeywordRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_3, null);
				}
				    |
				lv_type_0_4='gt'
				{
					newLeafNode(lv_type_0_4, grammarAccess.getFilterKeywordAccess().getTypeGtKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFilterKeywordRule());
					}
					setWithLastConsumed($current, "type", lv_type_0_4, null);
				}
			)
		)
	)
;

// Entry rule entryRuleUserVar
entryRuleUserVar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUserVarRule()); }
	iv_ruleUserVar=ruleUserVar
	{ $current=$iv_ruleUserVar.current; }
	EOF;

// Rule UserVar
ruleUserVar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUserVarAccess().getUserParamParserRuleCall_0());
		}
		this_UserParam_0=ruleUserParam
		{
			$current = $this_UserParam_0.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getUserVarAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUserVarAccess().getExpExpressionParserRuleCall_2_0());
				}
				lv_exp_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUserVarRule());
					}
					set(
						$current,
						"exp",
						lv_exp_2_0,
						"com.arsene.query.QueryDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleWorkspaceVar
entryRuleWorkspaceVar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWorkspaceVarRule()); }
	iv_ruleWorkspaceVar=ruleWorkspaceVar
	{ $current=$iv_ruleWorkspaceVar.current; }
	EOF;

// Rule WorkspaceVar
ruleWorkspaceVar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getWorkspaceVarAccess().getWorkspaceParamParserRuleCall_0());
		}
		this_WorkspaceParam_0=ruleWorkspaceParam
		{
			$current = $this_WorkspaceParam_0.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getWorkspaceVarAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWorkspaceVarAccess().getExpExpressionParserRuleCall_2_0());
				}
				lv_exp_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWorkspaceVarRule());
					}
					set(
						$current,
						"exp",
						lv_exp_2_0,
						"com.arsene.query.QueryDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleProjectVar
entryRuleProjectVar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProjectVarRule()); }
	iv_ruleProjectVar=ruleProjectVar
	{ $current=$iv_ruleProjectVar.current; }
	EOF;

// Rule ProjectVar
ruleProjectVar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getProjectVarAccess().getProjectParamParserRuleCall_0());
		}
		this_ProjectParam_0=ruleProjectParam
		{
			$current = $this_ProjectParam_0.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getProjectVarAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProjectVarAccess().getExpExpressionParserRuleCall_2_0());
				}
				lv_exp_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProjectVarRule());
					}
					set(
						$current,
						"exp",
						lv_exp_2_0,
						"com.arsene.query.QueryDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMetamodelVar
entryRuleMetamodelVar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetamodelVarRule()); }
	iv_ruleMetamodelVar=ruleMetamodelVar
	{ $current=$iv_ruleMetamodelVar.current; }
	EOF;

// Rule MetamodelVar
ruleMetamodelVar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMetamodelVarAccess().getMetamodelParamParserRuleCall_0());
		}
		ruleMetamodelParam
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getMetamodelVarAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMetamodelVarAccess().getExpExpressionParserRuleCall_2_0());
				}
				lv_exp_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMetamodelVarRule());
					}
					set(
						$current,
						"exp",
						lv_exp_2_0,
						"com.arsene.query.QueryDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleModelVar
entryRuleModelVar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelVarRule()); }
	iv_ruleModelVar=ruleModelVar
	{ $current=$iv_ruleModelVar.current; }
	EOF;

// Rule ModelVar
ruleModelVar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getModelVarAccess().getParamParserRuleCall_0());
		}
		ruleParam
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getModelVarAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelVarAccess().getExpExpressionParserRuleCall_2_0());
				}
				lv_exp_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelVarRule());
					}
					set(
						$current,
						"exp",
						lv_exp_2_0,
						"com.arsene.query.QueryDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDslVar
entryRuleDslVar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDslVarRule()); }
	iv_ruleDslVar=ruleDslVar
	{ $current=$iv_ruleDslVar.current; }
	EOF;

// Rule DslVar
ruleDslVar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDslVarAccess().getParamParserRuleCall_0());
		}
		ruleParam
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getDslVarAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDslVarAccess().getExpExpressionParserRuleCall_2_0());
				}
				lv_exp_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDslVarRule());
					}
					set(
						$current,
						"exp",
						lv_exp_2_0,
						"com.arsene.query.QueryDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleUserField
entryRuleUserField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUserFieldRule()); }
	iv_ruleUserField=ruleUserField
	{ $current=$iv_ruleUserField.current; }
	EOF;

// Rule UserField
ruleUserField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_typeName_0_1='id'
				{
					newLeafNode(lv_typeName_0_1, grammarAccess.getUserFieldAccess().getTypeNameIdKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUserFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_1, null);
				}
				    |
				lv_typeName_0_2='username'
				{
					newLeafNode(lv_typeName_0_2, grammarAccess.getUserFieldAccess().getTypeNameUsernameKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUserFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_2, null);
				}
				    |
				lv_typeName_0_3='email'
				{
					newLeafNode(lv_typeName_0_3, grammarAccess.getUserFieldAccess().getTypeNameEmailKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUserFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_3, null);
				}
				    |
				lv_typeName_0_4='createdAt'
				{
					newLeafNode(lv_typeName_0_4, grammarAccess.getUserFieldAccess().getTypeNameCreatedAtKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUserFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_4, null);
				}
				    |
				lv_typeName_0_5='updatedAt'
				{
					newLeafNode(lv_typeName_0_5, grammarAccess.getUserFieldAccess().getTypeNameUpdatedAtKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUserFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_5, null);
				}
			)
		)
	)
;

// Entry rule entryRuleWorkspaceField
entryRuleWorkspaceField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWorkspaceFieldRule()); }
	iv_ruleWorkspaceField=ruleWorkspaceField
	{ $current=$iv_ruleWorkspaceField.current; }
	EOF;

// Rule WorkspaceField
ruleWorkspaceField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_typeName_0_1='id'
				{
					newLeafNode(lv_typeName_0_1, grammarAccess.getWorkspaceFieldAccess().getTypeNameIdKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWorkspaceFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_1, null);
				}
				    |
				lv_typeName_0_2='name'
				{
					newLeafNode(lv_typeName_0_2, grammarAccess.getWorkspaceFieldAccess().getTypeNameNameKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWorkspaceFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_2, null);
				}
				    |
				lv_typeName_0_3='description'
				{
					newLeafNode(lv_typeName_0_3, grammarAccess.getWorkspaceFieldAccess().getTypeNameDescriptionKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWorkspaceFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_3, null);
				}
				    |
				lv_typeName_0_4='owner'
				{
					newLeafNode(lv_typeName_0_4, grammarAccess.getWorkspaceFieldAccess().getTypeNameOwnerKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWorkspaceFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_4, null);
				}
				    |
				lv_typeName_0_5='projects'
				{
					newLeafNode(lv_typeName_0_5, grammarAccess.getWorkspaceFieldAccess().getTypeNameProjectsKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWorkspaceFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_5, null);
				}
				    |
				lv_typeName_0_6='createdAt'
				{
					newLeafNode(lv_typeName_0_6, grammarAccess.getWorkspaceFieldAccess().getTypeNameCreatedAtKeyword_0_5());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWorkspaceFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_6, null);
				}
				    |
				lv_typeName_0_7='updatedAt'
				{
					newLeafNode(lv_typeName_0_7, grammarAccess.getWorkspaceFieldAccess().getTypeNameUpdatedAtKeyword_0_6());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWorkspaceFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_7, null);
				}
			)
		)
	)
;

// Entry rule entryRuleProjectField
entryRuleProjectField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProjectFieldRule()); }
	iv_ruleProjectField=ruleProjectField
	{ $current=$iv_ruleProjectField.current; }
	EOF;

// Rule ProjectField
ruleProjectField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_typeName_0_1='id'
				{
					newLeafNode(lv_typeName_0_1, grammarAccess.getProjectFieldAccess().getTypeNameIdKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProjectFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_1, null);
				}
				    |
				lv_typeName_0_2='name'
				{
					newLeafNode(lv_typeName_0_2, grammarAccess.getProjectFieldAccess().getTypeNameNameKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProjectFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_2, null);
				}
				    |
				lv_typeName_0_3='description'
				{
					newLeafNode(lv_typeName_0_3, grammarAccess.getProjectFieldAccess().getTypeNameDescriptionKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProjectFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_3, null);
				}
				    |
				lv_typeName_0_4='user'
				{
					newLeafNode(lv_typeName_0_4, grammarAccess.getProjectFieldAccess().getTypeNameUserKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProjectFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_4, null);
				}
				    |
				lv_typeName_0_5='workspace'
				{
					newLeafNode(lv_typeName_0_5, grammarAccess.getProjectFieldAccess().getTypeNameWorkspaceKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProjectFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_5, null);
				}
				    |
				lv_typeName_0_6='sharedUser'
				{
					newLeafNode(lv_typeName_0_6, grammarAccess.getProjectFieldAccess().getTypeNameSharedUserKeyword_0_5());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProjectFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_6, null);
				}
				    |
				lv_typeName_0_7='comments'
				{
					newLeafNode(lv_typeName_0_7, grammarAccess.getProjectFieldAccess().getTypeNameCommentsKeyword_0_6());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProjectFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_7, null);
				}
				    |
				lv_typeName_0_8='createdAt'
				{
					newLeafNode(lv_typeName_0_8, grammarAccess.getProjectFieldAccess().getTypeNameCreatedAtKeyword_0_7());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProjectFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_8, null);
				}
				    |
				lv_typeName_0_9='updatedAt'
				{
					newLeafNode(lv_typeName_0_9, grammarAccess.getProjectFieldAccess().getTypeNameUpdatedAtKeyword_0_8());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProjectFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_9, null);
				}
			)
		)
	)
;

// Entry rule entryRuleMetamodelField
entryRuleMetamodelField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetamodelFieldRule()); }
	iv_ruleMetamodelField=ruleMetamodelField
	{ $current=$iv_ruleMetamodelField.current; }
	EOF;

// Rule MetamodelField
ruleMetamodelField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_typeName_0_1='id'
				{
					newLeafNode(lv_typeName_0_1, grammarAccess.getMetamodelFieldAccess().getTypeNameIdKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetamodelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_1, null);
				}
				    |
				lv_typeName_0_2='accessControl'
				{
					newLeafNode(lv_typeName_0_2, grammarAccess.getMetamodelFieldAccess().getTypeNameAccessControlKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetamodelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_2, null);
				}
				    |
				lv_typeName_0_3='description'
				{
					newLeafNode(lv_typeName_0_3, grammarAccess.getMetamodelFieldAccess().getTypeNameDescriptionKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetamodelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_3, null);
				}
				    |
				lv_typeName_0_4='ePackage'
				{
					newLeafNode(lv_typeName_0_4, grammarAccess.getMetamodelFieldAccess().getTypeNameEPackageKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetamodelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_4, null);
				}
				    |
				lv_typeName_0_5='ext'
				{
					newLeafNode(lv_typeName_0_5, grammarAccess.getMetamodelFieldAccess().getTypeNameExtKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetamodelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_5, null);
				}
				    |
				lv_typeName_0_6='involvedOperations'
				{
					newLeafNode(lv_typeName_0_6, grammarAccess.getMetamodelFieldAccess().getTypeNameInvolvedOperationsKeyword_0_5());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetamodelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_6, null);
				}
				    |
				lv_typeName_0_7='metrics'
				{
					newLeafNode(lv_typeName_0_7, grammarAccess.getMetamodelFieldAccess().getTypeNameMetricsKeyword_0_6());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetamodelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_7, null);
				}
				    |
				lv_typeName_0_8='models'
				{
					newLeafNode(lv_typeName_0_8, grammarAccess.getMetamodelFieldAccess().getTypeNameModelsKeyword_0_7());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetamodelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_8, null);
				}
				    |
				lv_typeName_0_9='license'
				{
					newLeafNode(lv_typeName_0_9, grammarAccess.getMetamodelFieldAccess().getTypeNameLicenseKeyword_0_8());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetamodelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_9, null);
				}
				    |
				lv_typeName_0_10='metamodel'
				{
					newLeafNode(lv_typeName_0_10, grammarAccess.getMetamodelFieldAccess().getTypeNameMetamodelKeyword_0_9());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetamodelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_10, null);
				}
				    |
				lv_typeName_0_11='name'
				{
					newLeafNode(lv_typeName_0_11, grammarAccess.getMetamodelFieldAccess().getTypeNameNameKeyword_0_10());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetamodelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_11, null);
				}
				    |
				lv_typeName_0_12='project'
				{
					newLeafNode(lv_typeName_0_12, grammarAccess.getMetamodelFieldAccess().getTypeNameProjectKeyword_0_11());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetamodelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_12, null);
				}
				    |
				lv_typeName_0_13='size'
				{
					newLeafNode(lv_typeName_0_13, grammarAccess.getMetamodelFieldAccess().getTypeNameSizeKeyword_0_12());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetamodelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_13, null);
				}
				    |
				lv_typeName_0_14='storageUrl'
				{
					newLeafNode(lv_typeName_0_14, grammarAccess.getMetamodelFieldAccess().getTypeNameStorageUrlKeyword_0_13());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetamodelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_14, null);
				}
				    |
				lv_typeName_0_15='type'
				{
					newLeafNode(lv_typeName_0_15, grammarAccess.getMetamodelFieldAccess().getTypeNameTypeKeyword_0_14());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetamodelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_15, null);
				}
				    |
				lv_typeName_0_16='unique_name'
				{
					newLeafNode(lv_typeName_0_16, grammarAccess.getMetamodelFieldAccess().getTypeNameUnique_nameKeyword_0_15());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetamodelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_16, null);
				}
				    |
				lv_typeName_0_17='createdAt'
				{
					newLeafNode(lv_typeName_0_17, grammarAccess.getMetamodelFieldAccess().getTypeNameCreatedAtKeyword_0_16());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetamodelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_17, null);
				}
				    |
				lv_typeName_0_18='updatedAt'
				{
					newLeafNode(lv_typeName_0_18, grammarAccess.getMetamodelFieldAccess().getTypeNameUpdatedAtKeyword_0_17());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMetamodelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_18, null);
				}
			)
		)
	)
;

// Entry rule entryRuleModelField
entryRuleModelField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelFieldRule()); }
	iv_ruleModelField=ruleModelField
	{ $current=$iv_ruleModelField.current; }
	EOF;

// Rule ModelField
ruleModelField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_typeName_0_1='id'
				{
					newLeafNode(lv_typeName_0_1, grammarAccess.getModelFieldAccess().getTypeNameIdKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_1, null);
				}
				    |
				lv_typeName_0_2='accessControl'
				{
					newLeafNode(lv_typeName_0_2, grammarAccess.getModelFieldAccess().getTypeNameAccessControlKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_2, null);
				}
				    |
				lv_typeName_0_3='description'
				{
					newLeafNode(lv_typeName_0_3, grammarAccess.getModelFieldAccess().getTypeNameDescriptionKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_3, null);
				}
				    |
				lv_typeName_0_4='ext'
				{
					newLeafNode(lv_typeName_0_4, grammarAccess.getModelFieldAccess().getTypeNameExtKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_4, null);
				}
				    |
				lv_typeName_0_5='involvedOperations'
				{
					newLeafNode(lv_typeName_0_5, grammarAccess.getModelFieldAccess().getTypeNameInvolvedOperationsKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_5, null);
				}
				    |
				lv_typeName_0_6='license'
				{
					newLeafNode(lv_typeName_0_6, grammarAccess.getModelFieldAccess().getTypeNameLicenseKeyword_0_5());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_6, null);
				}
				    |
				lv_typeName_0_7='metamodel'
				{
					newLeafNode(lv_typeName_0_7, grammarAccess.getModelFieldAccess().getTypeNameMetamodelKeyword_0_6());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_7, null);
				}
				    |
				lv_typeName_0_8='name'
				{
					newLeafNode(lv_typeName_0_8, grammarAccess.getModelFieldAccess().getTypeNameNameKeyword_0_7());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_8, null);
				}
				    |
				lv_typeName_0_9='project'
				{
					newLeafNode(lv_typeName_0_9, grammarAccess.getModelFieldAccess().getTypeNameProjectKeyword_0_8());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_9, null);
				}
				    |
				lv_typeName_0_10='size'
				{
					newLeafNode(lv_typeName_0_10, grammarAccess.getModelFieldAccess().getTypeNameSizeKeyword_0_9());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_10, null);
				}
				    |
				lv_typeName_0_11='storageUrl'
				{
					newLeafNode(lv_typeName_0_11, grammarAccess.getModelFieldAccess().getTypeNameStorageUrlKeyword_0_10());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_11, null);
				}
				    |
				lv_typeName_0_12='type'
				{
					newLeafNode(lv_typeName_0_12, grammarAccess.getModelFieldAccess().getTypeNameTypeKeyword_0_11());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_12, null);
				}
				    |
				lv_typeName_0_13='unique_name'
				{
					newLeafNode(lv_typeName_0_13, grammarAccess.getModelFieldAccess().getTypeNameUnique_nameKeyword_0_12());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_13, null);
				}
				    |
				lv_typeName_0_14='createdAt'
				{
					newLeafNode(lv_typeName_0_14, grammarAccess.getModelFieldAccess().getTypeNameCreatedAtKeyword_0_13());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_14, null);
				}
				    |
				lv_typeName_0_15='updatedAt'
				{
					newLeafNode(lv_typeName_0_15, grammarAccess.getModelFieldAccess().getTypeNameUpdatedAtKeyword_0_14());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_15, null);
				}
			)
		)
	)
;

// Entry rule entryRuleDslField
entryRuleDslField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDslFieldRule()); }
	iv_ruleDslField=ruleDslField
	{ $current=$iv_ruleDslField.current; }
	EOF;

// Rule DslField
ruleDslField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_typeName_0_1='id'
				{
					newLeafNode(lv_typeName_0_1, grammarAccess.getDslFieldAccess().getTypeNameIdKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDslFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_1, null);
				}
				    |
				lv_typeName_0_2='accessControl'
				{
					newLeafNode(lv_typeName_0_2, grammarAccess.getDslFieldAccess().getTypeNameAccessControlKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDslFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_2, null);
				}
				    |
				lv_typeName_0_3='description'
				{
					newLeafNode(lv_typeName_0_3, grammarAccess.getDslFieldAccess().getTypeNameDescriptionKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDslFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_3, null);
				}
				    |
				lv_typeName_0_4='ext'
				{
					newLeafNode(lv_typeName_0_4, grammarAccess.getDslFieldAccess().getTypeNameExtKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDslFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_4, null);
				}
				    |
				lv_typeName_0_5='involvedOperations'
				{
					newLeafNode(lv_typeName_0_5, grammarAccess.getDslFieldAccess().getTypeNameInvolvedOperationsKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDslFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_5, null);
				}
				    |
				lv_typeName_0_6='license'
				{
					newLeafNode(lv_typeName_0_6, grammarAccess.getDslFieldAccess().getTypeNameLicenseKeyword_0_5());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDslFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_6, null);
				}
				    |
				lv_typeName_0_7='name'
				{
					newLeafNode(lv_typeName_0_7, grammarAccess.getDslFieldAccess().getTypeNameNameKeyword_0_6());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDslFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_7, null);
				}
				    |
				lv_typeName_0_8='project'
				{
					newLeafNode(lv_typeName_0_8, grammarAccess.getDslFieldAccess().getTypeNameProjectKeyword_0_7());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDslFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_8, null);
				}
				    |
				lv_typeName_0_9='size'
				{
					newLeafNode(lv_typeName_0_9, grammarAccess.getDslFieldAccess().getTypeNameSizeKeyword_0_8());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDslFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_9, null);
				}
				    |
				lv_typeName_0_10='storageUrl'
				{
					newLeafNode(lv_typeName_0_10, grammarAccess.getDslFieldAccess().getTypeNameStorageUrlKeyword_0_9());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDslFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_10, null);
				}
				    |
				lv_typeName_0_11='type'
				{
					newLeafNode(lv_typeName_0_11, grammarAccess.getDslFieldAccess().getTypeNameTypeKeyword_0_10());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDslFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_11, null);
				}
				    |
				lv_typeName_0_12='unique_name'
				{
					newLeafNode(lv_typeName_0_12, grammarAccess.getDslFieldAccess().getTypeNameUnique_nameKeyword_0_11());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDslFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_12, null);
				}
				    |
				lv_typeName_0_13='createdAt'
				{
					newLeafNode(lv_typeName_0_13, grammarAccess.getDslFieldAccess().getTypeNameCreatedAtKeyword_0_12());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDslFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_13, null);
				}
				    |
				lv_typeName_0_14='updatedAt'
				{
					newLeafNode(lv_typeName_0_14, grammarAccess.getDslFieldAccess().getTypeNameUpdatedAtKeyword_0_13());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDslFieldRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_14, null);
				}
			)
		)
	)
;

// Entry rule entryRuleUserParam
entryRuleUserParam returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUserParamRule()); }
	iv_ruleUserParam=ruleUserParam
	{ $current=$iv_ruleUserParam.current; }
	EOF;

// Rule UserParam
ruleUserParam returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_typeName_0_1='username'
				{
					newLeafNode(lv_typeName_0_1, grammarAccess.getUserParamAccess().getTypeNameUsernameKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUserParamRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_1, null);
				}
				    |
				lv_typeName_0_2='userId'
				{
					newLeafNode(lv_typeName_0_2, grammarAccess.getUserParamAccess().getTypeNameUserIdKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUserParamRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_2, null);
				}
				    |
				lv_typeName_0_3='email'
				{
					newLeafNode(lv_typeName_0_3, grammarAccess.getUserParamAccess().getTypeNameEmailKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUserParamRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_3, null);
				}
			)
		)
	)
;

// Entry rule entryRuleWorkspaceParam
entryRuleWorkspaceParam returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWorkspaceParamRule()); }
	iv_ruleWorkspaceParam=ruleWorkspaceParam
	{ $current=$iv_ruleWorkspaceParam.current; }
	EOF;

// Rule WorkspaceParam
ruleWorkspaceParam returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_typeName_0_1='owner'
				{
					newLeafNode(lv_typeName_0_1, grammarAccess.getWorkspaceParamAccess().getTypeNameOwnerKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWorkspaceParamRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_1, null);
				}
				    |
				lv_typeName_0_2='workspaceId'
				{
					newLeafNode(lv_typeName_0_2, grammarAccess.getWorkspaceParamAccess().getTypeNameWorkspaceIdKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWorkspaceParamRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_2, null);
				}
			)
		)
	)
;

// Entry rule entryRuleProjectParam
entryRuleProjectParam returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProjectParamRule()); }
	iv_ruleProjectParam=ruleProjectParam
	{ $current=$iv_ruleProjectParam.current; }
	EOF;

// Rule ProjectParam
ruleProjectParam returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_typeName_0_1='username'
				{
					newLeafNode(lv_typeName_0_1, grammarAccess.getProjectParamAccess().getTypeNameUsernameKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProjectParamRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_1, null);
				}
				    |
				lv_typeName_0_2='userId'
				{
					newLeafNode(lv_typeName_0_2, grammarAccess.getProjectParamAccess().getTypeNameUserIdKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProjectParamRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_2, null);
				}
				    |
				lv_typeName_0_3='workspaceId'
				{
					newLeafNode(lv_typeName_0_3, grammarAccess.getProjectParamAccess().getTypeNameWorkspaceIdKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProjectParamRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_3, null);
				}
				    |
				lv_typeName_0_4='projectId'
				{
					newLeafNode(lv_typeName_0_4, grammarAccess.getProjectParamAccess().getTypeNameProjectIdKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProjectParamRule());
					}
					setWithLastConsumed($current, "typeName", lv_typeName_0_4, null);
				}
			)
		)
	)
;

// Entry rule entryRuleMetamodelParam
entryRuleMetamodelParam returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMetamodelParamRule()); }
	iv_ruleMetamodelParam=ruleMetamodelParam
	{ $current=$iv_ruleMetamodelParam.current.getText(); }
	EOF;

// Rule MetamodelParam
ruleMetamodelParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMetamodelParamAccess().getMetaParamParserRuleCall_0());
		}
		this_MetaParam_0=ruleMetaParam
		{
			$current.merge(this_MetaParam_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMetamodelParamAccess().getParamParserRuleCall_1());
		}
		this_Param_1=ruleParam
		{
			$current.merge(this_Param_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMetaParam
entryRuleMetaParam returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMetaParamRule()); }
	iv_ruleMetaParam=ruleMetaParam
	{ $current=$iv_ruleMetaParam.current.getText(); }
	EOF;

// Rule MetaParam
ruleMetaParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='eClassifier'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMetaParamAccess().getEClassifierKeyword_0());
		}
		    |
		kw='ePackageName'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMetaParamAccess().getEPackageNameKeyword_1());
		}
		    |
		kw='ePackageNsURI'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMetaParamAccess().getEPackageNsURIKeyword_2());
		}
		    |
		kw='ePackageNsPrefix'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMetaParamAccess().getEPackageNsPrefixKeyword_3());
		}
		    |
		kw='quality-metric'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMetaParamAccess().getQualityMetricKeyword_4());
		}
		    |
		kw='model'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMetaParamAccess().getModelKeyword_5());
		}
	)
;

// Entry rule entryRuleParam
entryRuleParam returns [String current=null]:
	{ newCompositeNode(grammarAccess.getParamRule()); }
	iv_ruleParam=ruleParam
	{ $current=$iv_ruleParam.current.getText(); }
	EOF;

// Rule Param
ruleParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='id'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getParamAccess().getIdKeyword_0());
		}
		    |
		kw='accessControl'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getParamAccess().getAccessControlKeyword_1());
		}
		    |
		kw='description'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getParamAccess().getDescriptionKeyword_2());
		}
		    |
		kw='extension'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getParamAccess().getExtensionKeyword_3());
		}
		    |
		kw='operation'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getParamAccess().getOperationKeyword_4());
		}
		    |
		kw='name'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getParamAccess().getNameKeyword_5());
		}
		    |
		kw='unique-name'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getParamAccess().getUniqueNameKeyword_6());
		}
		    |
		kw='project'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getParamAccess().getProjectKeyword_7());
		}
		    |
		kw='size'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getParamAccess().getSizeKeyword_8());
		}
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='var'
		{
			newLeafNode(otherlv_0, grammarAccess.getVariableAccess().getVarKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getVariableAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableAccess().getExpressionExpressionParserRuleCall_3_0());
				}
				lv_expression_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableRule());
					}
					set(
						$current,
						"expression",
						lv_expression_3_0,
						"com.arsene.query.QueryDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getExpressionAccess().getIntConstantAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_INT
					{
						newLeafNode(lv_value_1_0, grammarAccess.getExpressionAccess().getValueINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getExpressionAccess().getStringConstantAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_value_3_0=RULE_STRING
					{
						newLeafNode(lv_value_3_0, grammarAccess.getExpressionAccess().getValueSTRINGTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getExpressionAccess().getBoolConstantAction_2_0(),
						$current);
				}
			)
			(
				(
					(
						lv_value_5_1='true'
						{
							newLeafNode(lv_value_5_1, grammarAccess.getExpressionAccess().getValueTrueKeyword_2_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getExpressionRule());
							}
							setWithLastConsumed($current, "value", lv_value_5_1, null);
						}
						    |
						lv_value_5_2='false'
						{
							newLeafNode(lv_value_5_2, grammarAccess.getExpressionAccess().getValueFalseKeyword_2_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getExpressionRule());
							}
							setWithLastConsumed($current, "value", lv_value_5_2, null);
						}
					)
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getExpressionAccess().getVariableRefAction_3_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExpressionRule());
						}
					}
					otherlv_7=RULE_ID
					{
						newLeafNode(otherlv_7, grammarAccess.getExpressionAccess().getVariableVariableCrossReference_3_1_0());
					}
				)
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
