/**
 * generated by Xtext 2.25.0
 */
package com.arsene.query.queryDsl.impl;

import com.arsene.query.queryDsl.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class QueryDslFactoryImpl extends EFactoryImpl implements QueryDslFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static QueryDslFactory init()
  {
    try
    {
      QueryDslFactory theQueryDslFactory = (QueryDslFactory)EPackage.Registry.INSTANCE.getEFactory(QueryDslPackage.eNS_URI);
      if (theQueryDslFactory != null)
      {
        return theQueryDslFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new QueryDslFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public QueryDslFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case QueryDslPackage.QUERY_MODEL: return createQueryModel();
      case QueryDslPackage.ABSTRACT_ELEMENT: return createAbstractElement();
      case QueryDslPackage.USER: return createUser();
      case QueryDslPackage.WORKSPACE: return createWorkspace();
      case QueryDslPackage.PROJECT: return createProject();
      case QueryDslPackage.METAMODEL: return createMetamodel();
      case QueryDslPackage.MODEL: return createModel();
      case QueryDslPackage.DSL: return createDsl();
      case QueryDslPackage.MICRO_SYNTAX: return createMicroSyntax();
      case QueryDslPackage.MODEL_QUERY: return createModelQuery();
      case QueryDslPackage.FULL_TEXT_SEARCH: return createFullTextSearch();
      case QueryDslPackage.QUALITY_METRIC: return createQualityMetric();
      case QueryDslPackage.TRANSFORMABLE: return createTransformable();
      case QueryDslPackage.TRANS_PARAM: return createTransParam();
      case QueryDslPackage.QEXP: return createQExp();
      case QueryDslPackage.QATTRIBUTE: return createQattribute();
      case QueryDslPackage.OPERATOR: return createOperator();
      case QueryDslPackage.FILTER: return createFilter();
      case QueryDslPackage.FILTER_EXP: return createFilterExp();
      case QueryDslPackage.COMPARISON: return createComparison();
      case QueryDslPackage.FILTER_KEYWORD: return createFilterKeyword();
      case QueryDslPackage.ARTIFACT_TYPE: return createArtifactType();
      case QueryDslPackage.USER_VAR: return createUserVar();
      case QueryDslPackage.WORKSPACE_VAR: return createWorkspaceVar();
      case QueryDslPackage.PROJECT_VAR: return createProjectVar();
      case QueryDslPackage.METAMODEL_VAR: return createMetamodelVar();
      case QueryDslPackage.MODEL_VAR: return createModelVar();
      case QueryDslPackage.DSL_VAR: return createDslVar();
      case QueryDslPackage.USER_FIELD: return createUserField();
      case QueryDslPackage.WORKSPACE_FIELD: return createWorkspaceField();
      case QueryDslPackage.PROJECT_FIELD: return createProjectField();
      case QueryDslPackage.METAMODEL_FIELD: return createMetamodelField();
      case QueryDslPackage.MODEL_FIELD: return createModelField();
      case QueryDslPackage.DSL_FIELD: return createDslField();
      case QueryDslPackage.USER_PARAM: return createUserParam();
      case QueryDslPackage.WORKSPACE_PARAM: return createWorkspaceParam();
      case QueryDslPackage.PROJECT_PARAM: return createProjectParam();
      case QueryDslPackage.VARIABLE: return createVariable();
      case QueryDslPackage.EXPRESSION: return createExpression();
      case QueryDslPackage.INT_CONSTANT: return createIntConstant();
      case QueryDslPackage.STRING_CONSTANT: return createStringConstant();
      case QueryDslPackage.BOOL_CONSTANT: return createBoolConstant();
      case QueryDslPackage.VARIABLE_REF: return createVariableRef();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public QueryModel createQueryModel()
  {
    QueryModelImpl queryModel = new QueryModelImpl();
    return queryModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AbstractElement createAbstractElement()
  {
    AbstractElementImpl abstractElement = new AbstractElementImpl();
    return abstractElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public User createUser()
  {
    UserImpl user = new UserImpl();
    return user;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Workspace createWorkspace()
  {
    WorkspaceImpl workspace = new WorkspaceImpl();
    return workspace;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Project createProject()
  {
    ProjectImpl project = new ProjectImpl();
    return project;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Metamodel createMetamodel()
  {
    MetamodelImpl metamodel = new MetamodelImpl();
    return metamodel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Dsl createDsl()
  {
    DslImpl dsl = new DslImpl();
    return dsl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MicroSyntax createMicroSyntax()
  {
    MicroSyntaxImpl microSyntax = new MicroSyntaxImpl();
    return microSyntax;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ModelQuery createModelQuery()
  {
    ModelQueryImpl modelQuery = new ModelQueryImpl();
    return modelQuery;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FullTextSearch createFullTextSearch()
  {
    FullTextSearchImpl fullTextSearch = new FullTextSearchImpl();
    return fullTextSearch;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public QualityMetric createQualityMetric()
  {
    QualityMetricImpl qualityMetric = new QualityMetricImpl();
    return qualityMetric;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Transformable createTransformable()
  {
    TransformableImpl transformable = new TransformableImpl();
    return transformable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TransParam createTransParam()
  {
    TransParamImpl transParam = new TransParamImpl();
    return transParam;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public QExp createQExp()
  {
    QExpImpl qExp = new QExpImpl();
    return qExp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Qattribute createQattribute()
  {
    QattributeImpl qattribute = new QattributeImpl();
    return qattribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Operator createOperator()
  {
    OperatorImpl operator = new OperatorImpl();
    return operator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Filter createFilter()
  {
    FilterImpl filter = new FilterImpl();
    return filter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FilterExp createFilterExp()
  {
    FilterExpImpl filterExp = new FilterExpImpl();
    return filterExp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Comparison createComparison()
  {
    ComparisonImpl comparison = new ComparisonImpl();
    return comparison;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FilterKeyword createFilterKeyword()
  {
    FilterKeywordImpl filterKeyword = new FilterKeywordImpl();
    return filterKeyword;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ArtifactType createArtifactType()
  {
    ArtifactTypeImpl artifactType = new ArtifactTypeImpl();
    return artifactType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UserVar createUserVar()
  {
    UserVarImpl userVar = new UserVarImpl();
    return userVar;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WorkspaceVar createWorkspaceVar()
  {
    WorkspaceVarImpl workspaceVar = new WorkspaceVarImpl();
    return workspaceVar;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ProjectVar createProjectVar()
  {
    ProjectVarImpl projectVar = new ProjectVarImpl();
    return projectVar;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MetamodelVar createMetamodelVar()
  {
    MetamodelVarImpl metamodelVar = new MetamodelVarImpl();
    return metamodelVar;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ModelVar createModelVar()
  {
    ModelVarImpl modelVar = new ModelVarImpl();
    return modelVar;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DslVar createDslVar()
  {
    DslVarImpl dslVar = new DslVarImpl();
    return dslVar;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UserField createUserField()
  {
    UserFieldImpl userField = new UserFieldImpl();
    return userField;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WorkspaceField createWorkspaceField()
  {
    WorkspaceFieldImpl workspaceField = new WorkspaceFieldImpl();
    return workspaceField;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ProjectField createProjectField()
  {
    ProjectFieldImpl projectField = new ProjectFieldImpl();
    return projectField;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MetamodelField createMetamodelField()
  {
    MetamodelFieldImpl metamodelField = new MetamodelFieldImpl();
    return metamodelField;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ModelField createModelField()
  {
    ModelFieldImpl modelField = new ModelFieldImpl();
    return modelField;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DslField createDslField()
  {
    DslFieldImpl dslField = new DslFieldImpl();
    return dslField;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UserParam createUserParam()
  {
    UserParamImpl userParam = new UserParamImpl();
    return userParam;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WorkspaceParam createWorkspaceParam()
  {
    WorkspaceParamImpl workspaceParam = new WorkspaceParamImpl();
    return workspaceParam;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ProjectParam createProjectParam()
  {
    ProjectParamImpl projectParam = new ProjectParamImpl();
    return projectParam;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Variable createVariable()
  {
    VariableImpl variable = new VariableImpl();
    return variable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression createExpression()
  {
    ExpressionImpl expression = new ExpressionImpl();
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntConstant createIntConstant()
  {
    IntConstantImpl intConstant = new IntConstantImpl();
    return intConstant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StringConstant createStringConstant()
  {
    StringConstantImpl stringConstant = new StringConstantImpl();
    return stringConstant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BoolConstant createBoolConstant()
  {
    BoolConstantImpl boolConstant = new BoolConstantImpl();
    return boolConstant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VariableRef createVariableRef()
  {
    VariableRefImpl variableRef = new VariableRefImpl();
    return variableRef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public QueryDslPackage getQueryDslPackage()
  {
    return (QueryDslPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static QueryDslPackage getPackage()
  {
    return QueryDslPackage.eINSTANCE;
  }

} //QueryDslFactoryImpl
