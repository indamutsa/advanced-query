/**
 * generated by Xtext 2.25.0
 */
package com.arsene.query.queryDsl.impl;

import com.arsene.query.queryDsl.Comparison;
import com.arsene.query.queryDsl.Expression;
import com.arsene.query.queryDsl.Filter;
import com.arsene.query.queryDsl.FilterExp;
import com.arsene.query.queryDsl.QueryDslPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Filter</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.arsene.query.queryDsl.impl.FilterImpl#getFilterExp <em>Filter Exp</em>}</li>
 *   <li>{@link com.arsene.query.queryDsl.impl.FilterImpl#getFilterExps <em>Filter Exps</em>}</li>
 *   <li>{@link com.arsene.query.queryDsl.impl.FilterImpl#getComp <em>Comp</em>}</li>
 *   <li>{@link com.arsene.query.queryDsl.impl.FilterImpl#getExp <em>Exp</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FilterImpl extends MinimalEObjectImpl.Container implements Filter
{
  /**
   * The cached value of the '{@link #getFilterExp() <em>Filter Exp</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFilterExp()
   * @generated
   * @ordered
   */
  protected FilterExp filterExp;

  /**
   * The cached value of the '{@link #getFilterExps() <em>Filter Exps</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFilterExps()
   * @generated
   * @ordered
   */
  protected FilterExp filterExps;

  /**
   * The cached value of the '{@link #getComp() <em>Comp</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComp()
   * @generated
   * @ordered
   */
  protected Comparison comp;

  /**
   * The cached value of the '{@link #getExp() <em>Exp</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExp()
   * @generated
   * @ordered
   */
  protected Expression exp;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FilterImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return QueryDslPackage.Literals.FILTER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FilterExp getFilterExp()
  {
    return filterExp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFilterExp(FilterExp newFilterExp, NotificationChain msgs)
  {
    FilterExp oldFilterExp = filterExp;
    filterExp = newFilterExp;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, QueryDslPackage.FILTER__FILTER_EXP, oldFilterExp, newFilterExp);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFilterExp(FilterExp newFilterExp)
  {
    if (newFilterExp != filterExp)
    {
      NotificationChain msgs = null;
      if (filterExp != null)
        msgs = ((InternalEObject)filterExp).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - QueryDslPackage.FILTER__FILTER_EXP, null, msgs);
      if (newFilterExp != null)
        msgs = ((InternalEObject)newFilterExp).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - QueryDslPackage.FILTER__FILTER_EXP, null, msgs);
      msgs = basicSetFilterExp(newFilterExp, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, QueryDslPackage.FILTER__FILTER_EXP, newFilterExp, newFilterExp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FilterExp getFilterExps()
  {
    return filterExps;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFilterExps(FilterExp newFilterExps, NotificationChain msgs)
  {
    FilterExp oldFilterExps = filterExps;
    filterExps = newFilterExps;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, QueryDslPackage.FILTER__FILTER_EXPS, oldFilterExps, newFilterExps);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFilterExps(FilterExp newFilterExps)
  {
    if (newFilterExps != filterExps)
    {
      NotificationChain msgs = null;
      if (filterExps != null)
        msgs = ((InternalEObject)filterExps).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - QueryDslPackage.FILTER__FILTER_EXPS, null, msgs);
      if (newFilterExps != null)
        msgs = ((InternalEObject)newFilterExps).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - QueryDslPackage.FILTER__FILTER_EXPS, null, msgs);
      msgs = basicSetFilterExps(newFilterExps, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, QueryDslPackage.FILTER__FILTER_EXPS, newFilterExps, newFilterExps));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Comparison getComp()
  {
    return comp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetComp(Comparison newComp, NotificationChain msgs)
  {
    Comparison oldComp = comp;
    comp = newComp;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, QueryDslPackage.FILTER__COMP, oldComp, newComp);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setComp(Comparison newComp)
  {
    if (newComp != comp)
    {
      NotificationChain msgs = null;
      if (comp != null)
        msgs = ((InternalEObject)comp).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - QueryDslPackage.FILTER__COMP, null, msgs);
      if (newComp != null)
        msgs = ((InternalEObject)newComp).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - QueryDslPackage.FILTER__COMP, null, msgs);
      msgs = basicSetComp(newComp, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, QueryDslPackage.FILTER__COMP, newComp, newComp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getExp()
  {
    return exp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExp(Expression newExp, NotificationChain msgs)
  {
    Expression oldExp = exp;
    exp = newExp;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, QueryDslPackage.FILTER__EXP, oldExp, newExp);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExp(Expression newExp)
  {
    if (newExp != exp)
    {
      NotificationChain msgs = null;
      if (exp != null)
        msgs = ((InternalEObject)exp).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - QueryDslPackage.FILTER__EXP, null, msgs);
      if (newExp != null)
        msgs = ((InternalEObject)newExp).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - QueryDslPackage.FILTER__EXP, null, msgs);
      msgs = basicSetExp(newExp, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, QueryDslPackage.FILTER__EXP, newExp, newExp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case QueryDslPackage.FILTER__FILTER_EXP:
        return basicSetFilterExp(null, msgs);
      case QueryDslPackage.FILTER__FILTER_EXPS:
        return basicSetFilterExps(null, msgs);
      case QueryDslPackage.FILTER__COMP:
        return basicSetComp(null, msgs);
      case QueryDslPackage.FILTER__EXP:
        return basicSetExp(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case QueryDslPackage.FILTER__FILTER_EXP:
        return getFilterExp();
      case QueryDslPackage.FILTER__FILTER_EXPS:
        return getFilterExps();
      case QueryDslPackage.FILTER__COMP:
        return getComp();
      case QueryDslPackage.FILTER__EXP:
        return getExp();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case QueryDslPackage.FILTER__FILTER_EXP:
        setFilterExp((FilterExp)newValue);
        return;
      case QueryDslPackage.FILTER__FILTER_EXPS:
        setFilterExps((FilterExp)newValue);
        return;
      case QueryDslPackage.FILTER__COMP:
        setComp((Comparison)newValue);
        return;
      case QueryDslPackage.FILTER__EXP:
        setExp((Expression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case QueryDslPackage.FILTER__FILTER_EXP:
        setFilterExp((FilterExp)null);
        return;
      case QueryDslPackage.FILTER__FILTER_EXPS:
        setFilterExps((FilterExp)null);
        return;
      case QueryDslPackage.FILTER__COMP:
        setComp((Comparison)null);
        return;
      case QueryDslPackage.FILTER__EXP:
        setExp((Expression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case QueryDslPackage.FILTER__FILTER_EXP:
        return filterExp != null;
      case QueryDslPackage.FILTER__FILTER_EXPS:
        return filterExps != null;
      case QueryDslPackage.FILTER__COMP:
        return comp != null;
      case QueryDslPackage.FILTER__EXP:
        return exp != null;
    }
    return super.eIsSet(featureID);
  }

} //FilterImpl
