{"remainingRequest":"/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/src/components/ConsoleView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/src/components/ConsoleView.vue","mtime":1627723391105},{"path":"/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ConsoleView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAufile":"ConsoleView.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <!-- FILE: <project>/frontend/src/components/ConsoleView.vue -->\n  <div class=\"console\">\n    <div class=\"console_header\">\n      <div class=\"console_settings\">\n        <i class=\"fa fa-trash\" title=\"Clear console\" @click=\"messages = []\" />\n        <div class=\"autoscroll\" title=\"Always scroll to last console output\">\n          <small>Autoscroll:</small>\n          <input type=\"checkbox\" v-model=\"autoscroll\" />\n        </div>\n      </div>\n      <div class=\"console_header_filler\">\n        <small class=\"console_title\">Console</small>\n      </div>\n    </div>\n    <pre id=\"console-output\">\n        <!-- eslint-disable-next-line -->\n        <code v-for=\"msg in messages\"><span class=\"timestamp\">[{{msg.time}}]:&nbsp;</span>{{ msg.message }}<br></code>\n    </pre>\n  </div>\n</template>\n\n<script>\n  import axios from \"axios\";\n  axios.defaults.headers.common[\"Access-Control-Allow-Origin\"] = \"*\";\n\n  export default {\n    name: \"ConsoleView\",\n    data() {\n      return {\n        autoscroll: true,\n        consoleOutputDOM: null,\n        messages: [],\n      };\n    },\n    mounted() {\n      this.consoleOutputDOM = document.getElementById(\"console-output\");\n      window.printConsoleOutput = this.printConsoleOutput;\n      window._transfoModel = this._transfoModel;\n      window._validateModel = this._validateModel;\n      window._compareModel = this._compareModel;\n      window._queryModel = this._queryModel;\n      window._mergeModels = this._mergeModels;\n\n      // window._transfoModel = () => {\n      //   this.printConsoleOutput(\"Executing: \\nTransforming the model...!\");\n      // };\n    },\n    methods: {\n      printConsoleOutput(msg) {\n        const d = new Date();\n        const sec = d.getSeconds() <= 9 ? \"0\" + d.getSeconds() : d.getSeconds();\n        const mins =\n          d.getMinutes() <= 9 ? \"0\" + d.getMinutes() : d.getMinutes();\n        const hours = d.getHours() <= 9 ? \"0\" + d.getHours() : d.getHours();\n        const month =\n          d.getMonth() + 1 <= 9 ? \"0\" + (d.getMonth() + 1) : d.getMonth() + 1;\n        const date = d.getDate() <= 9 ? \"0\" + d.getDate() : d.getDate();\n        const year = d.getYear() + 1900;\n        this.messages.push({\n          time: `${month}/${date}/${year} ${hours}-${mins}-${sec}`,\n          message: msg,\n        });\n        if (this.autoscroll) {\n          // Prevent blocking and wait for the message to render\n          setTimeout(() => {\n            this.scrollToBottom();\n          }, 1);\n        }\n      },\n      async _transfoModel(sourceM, sourceMM, targetMM, script) {\n        // call service _transfoModel(\"Tree.xmi\", \"Tree.ecore\", \"Tree.ecore\", \"Demo.etl\")\n        const data = {\n          sourceModel: sourceM, //\"Tree.xmi\",\n          sourceMetaModel: sourceMM, //\"Tree.ecore\",\n          targetMetaModel: targetMM, //\"Tree.ecore\",\n          scriptEtl: script, //\"Demo.etl\",\n        };\n\n        try {\n          await axios\n            .post(\n              `http://back.34.107.29.78.sslip.io/api/exec/transform`,\n              {\n                sourceModel: sourceM,\n                sourceMetaModel: sourceMM,\n                targetMetaModel: targetMM,\n                scriptEtl: script,\n              },\n              {\n                headers: {\n                  // remove headers\n                },\n              }\n            )\n            .then((response) => {\n              printConsoleOutput(\n                `\\nExecuting: \\nTransforming the model...!\\n\\nCode: ${response.status} -- sucesss` +\n                  \"\\n---------------------\\n\" +\n                  response.data.message +\n                  \"--------------------------\"\n              );\n            })\n            .catch((err) => {\n              printConsoleOutput(\n                \"\\nExecuting: \\nTransforming the model...!\\n\" +\n                  \"\\n---------------------\\n\" +\n                  `${err}\\n` +\n                  \"Please check your function arguments\\n\" +\n                  \"--------------------------\"\n              );\n            });\n        } catch (e) {\n          console.log(e + \"--\");\n        }\n      },\n      async _validateModel(m, metaM, script) {\n        // call service _validateModel(\"Tree.xmi\", \"Tree.ecore\", \"Demo.evl\")\n        try {\n          await axios\n            .post(\n              `http://back.34.107.29.78.sslip.io/api/exec/validate`,\n              {\n                model: m,\n                metaModel: metaM,\n                scriptEvl: script,\n              },\n              {\n                headers: {\n                  // remove headers\n                },\n              }\n            )\n            .then((response) => {\n              printConsoleOutput(\n                `\\nExecuting: \\nValidating the model...!\\n\\nCode: ${response.status} -- sucesss` +\n                  \"\\n---------------------\\n\" +\n                  response.data.message +\n                  \"--------------------------\"\n              );\n            })\n            .catch((err) => {\n              printConsoleOutput(\n                \"\\nExecuting: \\nValidating the model...!\\n\" +\n                  \"\\n---------------------\\n\" +\n                  `${err}\\n` +\n                  \"Please check your function arguments\\n\" +\n                  \"--------------------------\"\n              );\n            });\n        } catch (e) {\n          console.log(e + \"--\");\n        }\n      },\n      async _compareModel(m1, m2, script) {\n        // call service _compareModel(\"catalogue1.xml\", \"catalogue2.xml\", \"Demo.ecl\")\n        try {\n          await axios\n            .post(\n              `http://back.34.107.29.78.sslip.io/api/exec/compare`,\n              {\n                model1: \"catalogue1.xml\",\n                model2: \"catalogue2.xml\",\n                scriptEcl: \"Demo.ecl\",\n              },\n              {\n                headers: {\n                  // remove headers\n                },\n              }\n            )\n            .then((response) => {\n              printConsoleOutput(\n                `\\nExecuting: \\nComparing the models...!\\n\\nCode: ${response.status} -- sucesss` +\n                  \"\\n---------------------\\n\" +\n                  response.data.message +\n                  \"\\n--------------------------\"\n              );\n            })\n            .catch((err) => {\n              printConsoleOutput(\n                \"\\nExecuting: \\nComparing the models...!\\n\" +\n                  \"\\n---------------------\\n\" +\n                  `${err}\\n` +\n                  \"Please check your function arguments\\n\" +\n                  \"--------------------------\"\n              );\n            });\n        } catch (e) {\n          console.log(e + \"--\");\n        }\n      },\n      async _queryModel(m1, metaM, script) {\n        // call service _queryModel(\"Tree.xmi\", \"Tree.ecore\", \"Demo.eol\")\n        try {\n          await axios\n            .post(\n              `http://back.34.107.29.78.sslip.io/api/exec/query`,\n              {\n                model: m1,\n                metaModel: metaM,\n                scriptEol: script,\n              },\n              {\n                headers: {\n                  // remove headers\n                },\n              }\n            )\n            .then((response) => {\n              printConsoleOutput(\n                `\\nExecuting: \\nQuerying the model...!\\n\\nCode: ${response.status} -- sucesss` +\n                  \"\\n---------------------\\n\" +\n                  response.data.message +\n                  \"--------------------------\"\n              );\n            })\n            .catch((err) => {\n              printConsoleOutput(\n                \"\\nExecuting: \\nQuerying the model...!\\n\" +\n                  \"\\n---------------------\\n\" +\n                  `${err}\\n` +\n                  \"Please check your function arguments\\n\" +\n                  \"--------------------------\"\n              );\n            });\n        } catch (e) {\n          console.log(e + \"--\");\n        }\n      },\n      async _mergeModels(model1, model2, eclscript, etlscript) {\n        // call service _mergeModels(\"catalogue1.xml\", \"catalogue2.xml\", \"catalogues.ecl\", \"catalogues.eml\")\n        try {\n          await axios\n            .post(\n              `http://back.34.107.29.78.sslip.io/api/exec/merge`,\n              {\n                mod1: model1,\n                mod2: model2,\n                ecl: eclscript,\n                etl: etlscript,\n              },\n              {\n                headers: {\n                  // remove headers\n                },\n              }\n            )\n            .then((response) => {\n              printConsoleOutput(\n                `\\nExecuting: \\nMerging models ${model1}, ${model2}...!\\n\\nCode: ${response.status} -- sucesss` +\n                  \"\\n---------------------\\n\" +\n                  response.data.message +\n                  \"--------------------------\"\n              );\n            })\n            .catch((err) => {\n              printConsoleOutput(\n                `\\nExecuting: \\nMerging models ${model1}, ${model2}...!\\n` +\n                  \"\\n---------------------\\n\" +\n                  `${err}\\n` +\n                  \"Please check your function arguments\\n\" +\n                  \"--------------------------\"\n              );\n            });\n        } catch (e) {\n          console.log(e + \"--\");\n        }\n      },\n      scrollToBottom() {\n        try {\n          this.consoleOutputDOM.lastElementChild.scrollIntoView();\n        } catch (err) {\n          console.log(\"ConsoleView - scrollToBottom: \" + err);\n        }\n      },\n    },\n  };\n</script>\n\n<style>\n  @import url(\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\");\n\n  :root {\n    --light-grey: #e0e0e0;\n    --grey: #4d4a4a;\n  }\n\n  i {\n    cursor: pointer;\n    height: 1em;\n    width: 1em;\n  }\n\n  #console-output {\n    flex-grow: 1;\n    padding-left: 0.5em;\n  }\n\n  #console-output code {\n    white-space: pre-wrap;\n    overflow: auto;\n  }\n\n  .autoscroll {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n  }\n\n  .timestamp {\n    font-weight: bold;\n    color: var(--grey);\n  }\n\n  pre {\n    white-space: pre-line;\n    margin: 0;\n    margin-top: -1em;\n  }\n\n  .console_settings {\n    flex-grow: 1;\n    flex-wrap: nowrap;\n    flex-direction: row;\n    display: flex;\n    align-items: center;\n  }\n\n  .console_settings small {\n    padding-top: 3px;\n  }\n\n  .console_settings > * {\n    margin-left: 0.5em;\n  }\n\n  .console_header {\n    padding-left: 0.5em;\n    position: sticky;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 2em;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    background-color: var(--light-grey);\n    line-height: 1em;\n\n  }\n\n  .console_title {\n    padding-top: 3px;\n    color: var(--grey);\n  }\n\n  .console_header_filler {\n    display: flex;\n    flex-grow: 1;\n    padding-right: 3em;\n    justify-content: flex-end;\n    flex-direction: row;\n  }\n\n  .console {\n    display: flex;\n    flex-direction: column;\n    overflow-y: hidden;\n  }\n</style>\n"]}]}