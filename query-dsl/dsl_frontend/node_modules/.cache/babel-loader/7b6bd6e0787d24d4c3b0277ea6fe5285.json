{"remainingRequest":"/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/node_modules/thread-loader/dist/cjs.js!/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/node_modules/babel-loader/lib/index.js!/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/src/App.vue","mtime":1627728471330},{"path":"/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgcHJvdG9jb2wsIGJhc2VVcmwgfSBmcm9tICJAL3NlcnZpY2VzL0Nvbm5lY3Rpb25EYXRhLmpzIjsKaW1wb3J0IENvbnNvbGVWaWV3IGZyb20gIkAvY29tcG9uZW50cy9Db25zb2xlVmlldyI7CmltcG9ydCBDb21waWxlclNlcnZpY2UgZnJvbSAiQC9zZXJ2aWNlcy9Db21waWxlclNlcnZpY2UiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkFwcCIsCiAgY29tcG9uZW50czogewogICAgQ29uc29sZVZpZXcKICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgeHRleHRFZGl0b3I6IG51bGwsCiAgICAgIHNjcmlwdENvbnRhaW5lcjogbnVsbCwKICAgICAgZHNsRmlsZUV4dGVuc2lvbjogIiIKICAgIH07CiAgfSwKCiAgbW91bnRlZCgpIHsKICAgIC8qIElmIHRoZSBfeHRleHQgb2JqZWN0IGlzIG5vdCBudWxsIHdoZW4gd2UgbW91bnQgdGhpcyBjb21wb25lbnQsIHdlIGNhbiBjb250aW51ZSB0byBjb25maWd1cmUgb3VyIGVkaXRvciwgb3RoZXJ3aXNlIHdlIHdpbGwgd2FpdCBmb3IgdGhlICdyZWFkeScgZXZlbnQgKi8KICAgICF3aW5kb3cuX3h0ZXh0ID8gd2luZG93Lnh0ZXh0UmVhZHlFdmVudC5vbigicmVhZHkiLCB0aGlzLnNldFh0ZXh0RWRpdG9yKSA6IHRoaXMuc2V0WHRleHRFZGl0b3IoKTsKICB9LAoKICBtZXRob2RzOiB7CiAgICBzZXRYdGV4dEVkaXRvcigpIHsKICAgICAgLyogVGhlIHNlcnZpY2VVcmwgY29udGFpbnMgdGhlIFVSTCwgb24gd2hpY2gKICAgICAgIHRoZSBsYW5ndWFnZSBzZXJ2ZXIgaXMgcmVhY2hhYmxlICovCiAgICAgIHRoaXMuZHNsRmlsZUV4dGVuc2lvbiA9IHdpbmRvdy5fZHNsRmlsZUV4dGVuc2lvbjsKICAgICAgLyogV2UgaGF2ZSB0byB3YWl0IHVudGlsIHJlbmRlcmluZyBvZiB0aGlzLmRzbEZpbGVFeHRlbnNpb24KICAgICAgaW4gZGF0YS1lZGl0b3IteHRleHQtbGFuZyBhdHRyaWJ1dGUgZmluaXNoZXMKICAgICAgYmVmb3JlIHdlIGluaXRpYWxpemUgdGhlIGVkaXRvciAqLwoKICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgIHRoaXMueHRleHRFZGl0b3IgPSB3aW5kb3cuX3h0ZXh0LmNyZWF0ZUVkaXRvcih7CiAgICAgICAgICBiYXNlVXJsOiAiLyIsCiAgICAgICAgICBzZXJ2aWNlVXJsOiBgJHtwcm90b2NvbH0ke2Jhc2VVcmx9eHRleHQtc2VydmljZWAsCiAgICAgICAgICBzeW50YXhEZWZpbml0aW9uOiBgeHRleHQtcmVzb3VyY2VzL2dlbmVyYXRlZC9tb2RlLSR7dGhpcy5kc2xGaWxlRXh0ZW5zaW9ufS5qc2AsCiAgICAgICAgICBlbmFibGVDb3JzOiB0cnVlLAogICAgICAgICAgbG9hZEZyb21TZXJ2ZXI6IGZhbHNlLAogICAgICAgICAgcmVzb3VyY2VJZDogIi4vbi53bCIKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAoKICAgIG9wZW5Eb2MoKSB7CiAgICAgIHdpbmRvdy5vcGVuKHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gImh0dHBzOi8vZG9jcy5nb29nbGUuY29tL2RvY3VtZW50L2QvMVhyWkRLLVoxUTN0bWFucWp2ZmFDZmlsNC1YbXZILWlSUC1HNWFMcW01cE0vZWRpdD91c3A9c2hhcmluZyIsICJfYmxhbmsiKTsKICAgIH0sCgogICAgYXN5bmMgY29tcGlsZVRvSlMoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgLy8gVGFrZSB0aGUgZWRpdG9yIGNvbnRlbnQgYW5kIHNlbmQgaXQgdG8gdGhlIGJhY2tlbmQKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IENvbXBpbGVyU2VydmljZS5jb21waWxlQ29kZSh0aGlzLnh0ZXh0RWRpdG9yLmdldFZhbHVlKCkpOwogICAgICAgIGNvbnN0IGNvbXBpbGVkQ29kZSA9IHJlc3BvbnNlLmRhdGEuY29kZTsgLy8gRXhlY3V0ZSB0aGUgY29tcGlsZWQgY29kZQoKICAgICAgICB0aGlzLnJ1bkNvbXBpbGVkQ29kZShjb21waWxlZENvZGUpOwogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBjb25zb2xlLmVycm9yKGVyci5lcnJvcik7CiAgICAgIH0KICAgIH0sCgogICAgcnVuQ29tcGlsZWRDb2RlKGNvbXBpbGVkQ29kZSkgewogICAgICB0cnkgewogICAgICAgIGNvbnN0IGhlYWRET00gPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiaGVhZCIpWzBdOyAvLyBSZW1vdmUgcHJpb3IgY3JlYXRlZCBzY3JpcHQgRE9NIGlmIG9uZSBleGlzdHMKCiAgICAgICAgaWYgKHRoaXMuc2NyaXB0Q29udGFpbmVyKSBoZWFkRE9NLnJlbW92ZUNoaWxkKHRoaXMuc2NyaXB0Q29udGFpbmVyKTsgLy8gQ3JlYXRlIGEgc2NyaXB0IERPTSB3aGljaCB3aWxsIGNvbnRhaW4gdGhlIGNvbXBpbGVkIGNvZGUKCiAgICAgICAgdGhpcy5zY3JpcHRDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTsKICAgICAgICB0aGlzLnNjcmlwdENvbnRhaW5lci5pbm5lckhUTUwgPSBgCiAgICAgIHRyeSB7CiAgICAgICAgYXN5bmMgZnVuY3Rpb24gcnVuKCkgewogICAgICAgICAgICAke2NvbXBpbGVkQ29kZX0KICAgICAgICB9CiAgICAgICAgcnVuKCkKICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgY29uc29sZS5lcnJvcignQ09NUElMRUQgQ09ERSBFUlJPUjonLCBlcnIpCiAgICAgIH0KICAgICAgYDsgLy8gQXBwZW5kaW5nIHRoZSBzY3JpcHQgRE9NIHRvIHRoZSBoZWFkIHdpbGwgbGVhZCB0byBhdXRtYXRpYyBleGVjdXRpb24KICAgICAgICAvLyBvZiB0aGUgYXBwZW5kZWQgc2NyaXB0IERPTQoKICAgICAgICBoZWFkRE9NLmFwcGVuZENoaWxkKHRoaXMuc2NyaXB0Q29udGFpbmVyKTsKICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgY29uc29sZS5lcnJvcihlcnIpOwogICAgICB9CiAgICB9CgogIH0KfTs="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,SAAA,QAAA,EAAA,OAAA,QAAA,8BAAA;AACA,OAAA,WAAA,MAAA,0BAAA;AACA,OAAA,eAAA,MAAA,4BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,KADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA;AADA,GAFA;;AAKA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,IADA;AAEA,MAAA,eAAA,EAAA,IAFA;AAGA,MAAA,gBAAA,EAAA;AAHA,KAAA;AAKA,GAXA;;AAYA,EAAA,OAAA,GAAA;AACA;AAEA,KAAA,MAAA,CAAA,MAAA,GACA,MAAA,CAAA,eAAA,CAAA,EAAA,CAAA,OAAA,EAAA,KAAA,cAAA,CADA,GAEA,KAAA,cAAA,EAFA;AAGA,GAlBA;;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,cAAA,GAAA;AACA;;AAEA,WAAA,gBAAA,GAAA,MAAA,CAAA,iBAAA;AAEA;;;;AAIA,WAAA,SAAA,CAAA,MAAA;AACA,aAAA,WAAA,GAAA,MAAA,CAAA,MAAA,CAAA,YAAA,CAAA;AACA,UAAA,OAAA,EAAA,GADA;AAEA,UAAA,UAAA,EAAA,GAAA,QAAA,GAAA,OAAA,eAFA;AAGA,UAAA,gBAAA,EAAA,kCAAA,KAAA,gBAAA,KAHA;AAIA,UAAA,UAAA,EAAA,IAJA;AAKA,UAAA,cAAA,EAAA,KALA;AAMA,UAAA,UAAA,EAAA;AANA,SAAA,CAAA;AAQA,OATA;AAUA,KApBA;;AAqBA,IAAA,OAAA,GAAA;AACA,MAAA,MAAA,CAAA,IAAA,CACA,MAAA,CAAA,QAAA,CAAA,IAAA,GACA,kGAFA,EAGA,QAHA;AAKA,KA3BA;;AA4BA,UAAA,WAAA,GAAA;AACA,UAAA;AACA;AACA,cAAA,QAAA,GAAA,MAAA,eAAA,CAAA,WAAA,CACA,KAAA,WAAA,CAAA,QAAA,EADA,CAAA;AAGA,cAAA,YAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CALA,CAMA;;AACA,aAAA,eAAA,CAAA,YAAA;AACA,OARA,CAQA,OAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,KAAA,CAAA,GAAA,CAAA,KAAA;AACA;AACA,KAxCA;;AAyCA,IAAA,eAAA,CAAA,YAAA,EAAA;AACA,UAAA;AACA,cAAA,OAAA,GAAA,QAAA,CAAA,oBAAA,CAAA,MAAA,EAAA,CAAA,CAAA,CADA,CAEA;;AACA,YAAA,KAAA,eAAA,EAAA,OAAA,CAAA,WAAA,CAAA,KAAA,eAAA,EAHA,CAKA;;AACA,aAAA,eAAA,GAAA,QAAA,CAAA,aAAA,CAAA,QAAA,CAAA;AACA,aAAA,eAAA,CAAA,SAAA,GAAA;;;cAGA,YAAA;;;;;;OAHA,CAPA,CAiBA;AACA;;AACA,QAAA,OAAA,CAAA,WAAA,CAAA,KAAA,eAAA;AACA,OApBA,CAoBA,OAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,KAAA,CAAA,GAAA;AACA;AACA;;AAjEA;AAnBA,CAAA","sourcesContent":["<template>\n  <!-- FILE: <project>/frontend/src/App.vue -->\n  <div id=\"app\">\n    <div class=\"container\">\n      <div class=\"topbar\">\n        <div class=\"topbarTitle\">\n          <h1>MDEForgeWL Prototype</h1>\n        </div>\n        <div class=\"topbarDocs\" @click=\"openDoc\">\n          <img src=\"/images/book.png\" alt=\"\">\n          <hr>\n          <p>Documentation</p>\n        </div>\n      </div>\n      <div class=\"content\">\n        <div class=\"contentEditor\">\n          <div class=\"editorRun\" >\n            <!-- <div class=\"editorRunTitle\"> -->\n              <p class=\"execute\" @click=\"compileToJS\">Execute</p>\n              <img @click=\"compileToJS\" src=\"images/execute.png\" alt=\"\">\n            <!-- </div> -->\n          </div>\n          <div id=\"xtext-editor\" :data-editor-xtext-lang=\"this.dslFileExtension\" class=\"editorInput\">\n            /* Please click documentation button to get started */\n          </div>\n        </div>\n        <div class=\"contentConsole\">\n          <ConsoleView id=\"console-view\" />\n          <!-- <div class=\"consoleTitle\">Console Title</div>\n          <div class=\"consoleDisplay\">Display</div> -->\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import { protocol, baseUrl } from \"@/services/ConnectionData.js\";\n  import ConsoleView from \"@/components/ConsoleView\";\n  import CompilerService from \"@/services/CompilerService\";\n\n  export default {\n    name: \"App\",\n    components: {\n      ConsoleView,\n    },\n    data() {\n      return {\n        xtextEditor: null,\n        scriptContainer: null,\n        dslFileExtension: \"\",\n      };\n    },\n    mounted() {\n      /* If the _xtext object is not null when we mount this component, we can continue to configure our editor, otherwise we will wait for the 'ready' event */\n\n      !window._xtext\n        ? window.xtextReadyEvent.on(\"ready\", this.setXtextEditor)\n        : this.setXtextEditor();\n    },\n    methods: {\n      setXtextEditor() {\n        /* The serviceUrl contains the URL, on which\n         the language server is reachable */\n        this.dslFileExtension = window._dslFileExtension;\n\n        /* We have to wait until rendering of this.dslFileExtension\n        in data-editor-xtext-lang attribute finishes\n        before we initialize the editor */\n\n        this.$nextTick(() => {\n          this.xtextEditor = window._xtext.createEditor({\n            baseUrl: \"/\",\n            serviceUrl: `${protocol}${baseUrl}xtext-service`,\n            syntaxDefinition: `xtext-resources/generated/mode-${this.dslFileExtension}.js`,\n            enableCors: true,\n            loadFromServer: false,\n            resourceId: \"./n.wl\",\n          });\n        });\n      },\n      openDoc() {\n        window.open(\n          (window.location.href =\n            \"https://docs.google.com/document/d/1XrZDK-Z1Q3tmanqjvfaCfil4-XmvH-iRP-G5aLqm5pM/edit?usp=sharing\"),\n          \"_blank\"\n        );\n      },\n      async compileToJS() {\n        try {\n          // Take the editor content and send it to the backend\n          const response = await CompilerService.compileCode(\n            this.xtextEditor.getValue()\n          );\n          const compiledCode = response.data.code;\n          // Execute the compiled code\n          this.runCompiledCode(compiledCode);\n        } catch (err) {\n          console.error(err.error);\n        }\n      },\n      runCompiledCode(compiledCode) {\n        try {\n          const headDOM = document.getElementsByTagName(\"head\")[0];\n          // Remove prior created script DOM if one exists\n          if (this.scriptContainer) headDOM.removeChild(this.scriptContainer);\n\n          // Create a script DOM which will contain the compiled code\n          this.scriptContainer = document.createElement(\"script\");\n          this.scriptContainer.innerHTML = `\n        try {\n          async function run() {\n              ${compiledCode}\n          }\n          run()\n        } catch (err) {\n          console.error('COMPILED CODE ERROR:', err)\n        }\n        `;\n          // Appending the script DOM to the head will lead to autmatic execution\n          // of the appended script DOM\n          headDOM.appendChild(this.scriptContainer);\n        } catch (err) {\n          console.error(err);\n        }\n      },\n    },\n  };\n</script>\n\n<style>\n  *{\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n\n  }\n\n  .container {\n    width: 100%;\n  }\n\n  .topbar{\n    width: 100%;\n    height: 120px;\n    display: flex;\n    background-color: #3b3c3d;\n    align-items: center;\n  }\n\n  .topbarTitle {\n    flex: 3;\n    width: 100%;\n    height: 70px;\n    color:black;\n    background-color: yellow;\n    text-align: center;\n    line-height: 70px;\n    margin-right: 300px;\n    margin-left: 300px;\n    border-radius: 15px;\n    -webkit-box-shadow: 2px 2px 10px 9px rgba(0,0,0,0.87); \n    box-shadow: 2px 2px 10px 9px rgba(0,0,0,0.87);\n  }\n\n\n\n  .topbarDocs{\n    flex: 1;\n    width: 100%;\n    height: 70px;\n  }\n\n  .topbarDocs img{\n    width: 120px;\n    height: 60px;\n    display: block;\n    margin-right: auto;\n    margin-left: auto;\n    cursor: pointer;\n  }\n\n  .topbarDocs p{\n    color: white;\n    text-align: center;\n    cursor: pointer;\n  }\n\n  .content {\n    width: 100%;\n    display: flex;\n  }\n\n  .contentEditor{\n    flex: 4;\n  }\n\n  .editorRun{\n    border: 2px solid black;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    margin-left: auto;\n    margin-right: auto;\n\n  }\n\n  .editorRun img{\n    width: 30px;\n    margin: 2px;\n    cursor: pointer;\n  }\n\n  .editorRun img:active{\n        -webkit-box-shadow: 2px 2px 10px 9px rgba(172, 172, 172, 0.87); \n    box-shadow: 2px 2px 10px 9px rgba(131, 131, 131, 0.87);\n  }\n\n  .editorRun .execute{\n      padding: 4px;\n      margin: 2px;\n      cursor: pointer;\n  }\n\n  .editorRun .execute:active{\n    -webkit-box-shadow: 2px 2px 10px 9px rgba(0,0,0,0.87); \n    box-shadow: 2px 2px 10px 9px rgba(0,0,0,0.87);\n  }\n\n  #xtext-editor {\n   height: calc(100vh - 160px);\n    width: 100%;\n    border: 1px solid #aaa;\n  }\n\n\n  .contentConsole{\n    flex: 2\n  }\n\n\n\n  /* html,\n  body,\n  #app {\n    height: 100%;\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    width: 100%;\n  }\n\n  #app {\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    font-family: Avenir, Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    color: #2c3e50;\n    height: 90%;\n    justify-content: center;\n    align-items: center;\n  }\n\n  #controls,\n  .content {\n    width: 90%;\n  }\n\n  .content {\n    display: flex;\n    min-height: 100%;\n  }\n\n  #xtext-editor {\n    position: relative;\n    height: 100%;\n    width: 100%;\n    border: 1px solid #aaa;\n  }\n\n  #console-view {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    border: 1px solid #aaa;\n  }\n\n  .tatanya {\n    display: flex;\n    justify-content: space-between;\n  } */\n</style>\n"],"sourceRoot":"src"}]}