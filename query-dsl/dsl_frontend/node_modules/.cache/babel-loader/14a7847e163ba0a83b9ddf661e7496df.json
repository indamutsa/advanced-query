{"remainingRequest":"/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/node_modules/thread-loader/dist/cjs.js!/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/node_modules/babel-loader/lib/index.js!/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/src/components/ConsoleView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/src/components/ConsoleView.vue","mtime":1627723391105},{"path":"/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/arsene/IdeaProjects/model-services/workflow-dsl/dsl_frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ConsoleView.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <!-- FILE: <project>/frontend/src/components/ConsoleView.vue -->\n  <div class=\"console\">\n    <div class=\"console_header\">\n      <div class=\"console_settings\">\n        <i class=\"fa fa-trash\" title=\"Clear console\" @click=\"messages = []\" />\n        <div class=\"autoscroll\" title=\"Always scroll to last console output\">\n          <small>Autoscroll:</small>\n          <input type=\"checkbox\" v-model=\"autoscroll\" />\n        </div>\n      </div>\n      <div class=\"console_header_filler\">\n        <small class=\"console_title\">Console</small>\n      </div>\n    </div>\n    <pre id=\"console-output\">\n        <!-- eslint-disable-next-line -->\n        <code v-for=\"msg in messages\"><span class=\"timestamp\">[{{msg.time}}]:&nbsp;</span>{{ msg.message }}<br></code>\n    </pre>\n  </div>\n</template>\n\n<script>\n  import axios from \"axios\";\n  axios.defaults.headers.common[\"Access-Control-Allow-Origin\"] = \"*\";\n\n  export default {\n    name: \"ConsoleView\",\n    data() {\n      return {\n        autoscroll: true,\n        consoleOutputDOM: null,\n        messages: [],\n      };\n    },\n    mounted() {\n      this.consoleOutputDOM = document.getElementById(\"console-output\");\n      window.printConsoleOutput = this.printConsoleOutput;\n      window._transfoModel = this._transfoModel;\n      window._validateModel = this._validateModel;\n      window._compareModel = this._compareModel;\n      window._queryModel = this._queryModel;\n      window._mergeModels = this._mergeModels;\n\n      // window._transfoModel = () => {\n      //   this.printConsoleOutput(\"Executing: \\nTransforming the model...!\");\n      // };\n    },\n    methods: {\n      printConsoleOutput(msg) {\n        const d = new Date();\n        const sec = d.getSeconds() <= 9 ? \"0\" + d.getSeconds() : d.getSeconds();\n        const mins =\n          d.getMinutes() <= 9 ? \"0\" + d.getMinutes() : d.getMinutes();\n        const hours = d.getHours() <= 9 ? \"0\" + d.getHours() : d.getHours();\n        const month =\n          d.getMonth() + 1 <= 9 ? \"0\" + (d.getMonth() + 1) : d.getMonth() + 1;\n        const date = d.getDate() <= 9 ? \"0\" + d.getDate() : d.getDate();\n        const year = d.getYear() + 1900;\n        this.messages.push({\n          time: `${month}/${date}/${year} ${hours}-${mins}-${sec}`,\n          message: msg,\n        });\n        if (this.autoscroll) {\n          // Prevent blocking and wait for the message to render\n          setTimeout(() => {\n            this.scrollToBottom();\n          }, 1);\n        }\n      },\n      async _transfoModel(sourceM, sourceMM, targetMM, script) {\n        // call service _transfoModel(\"Tree.xmi\", \"Tree.ecore\", \"Tree.ecore\", \"Demo.etl\")\n        const data = {\n          sourceModel: sourceM, //\"Tree.xmi\",\n          sourceMetaModel: sourceMM, //\"Tree.ecore\",\n          targetMetaModel: targetMM, //\"Tree.ecore\",\n          scriptEtl: script, //\"Demo.etl\",\n        };\n\n        try {\n          await axios\n            .post(\n              `http://back.34.107.29.78.sslip.io/api/exec/transform`,\n              {\n                sourceModel: sourceM,\n                sourceMetaModel: sourceMM,\n                targetMetaModel: targetMM,\n                scriptEtl: script,\n              },\n              {\n                headers: {\n                  // remove headers\n                },\n              }\n            )\n            .then((response) => {\n              printConsoleOutput(\n                `\\nExecuting: \\nTransforming the model...!\\n\\nCode: ${response.status} -- sucesss` +\n                  \"\\n---------------------\\n\" +\n                  response.data.message +\n                  \"--------------------------\"\n              );\n            })\n            .catch((err) => {\n              printConsoleOutput(\n                \"\\nExecuting: \\nTransforming the model...!\\n\" +\n                  \"\\n---------------------\\n\" +\n                  `${err}\\n` +\n                  \"Please check your function arguments\\n\" +\n                  \"--------------------------\"\n              );\n            });\n        } catch (e) {\n          console.log(e + \"--\");\n        }\n      },\n      async _validateModel(m, metaM, script) {\n        // call service _validateModel(\"Tree.xmi\", \"Tree.ecore\", \"Demo.evl\")\n        try {\n          await axios\n            .post(\n              `http://back.34.107.29.78.sslip.io/api/exec/validate`,\n              {\n                model: m,\n                metaModel: metaM,\n                scriptEvl: script,\n              },\n              {\n                headers: {\n                  // remove headers\n                },\n              }\n            )\n            .then((response) => {\n              printConsoleOutput(\n                `\\nExecuting: \\nValidating the model...!\\n\\nCode: ${response.status} -- sucesss` +\n                  \"\\n---------------------\\n\" +\n                  response.data.message +\n                  \"--------------------------\"\n              );\n            })\n            .catch((err) => {\n              printConsoleOutput(\n                \"\\nExecuting: \\nValidating the model...!\\n\" +\n                  \"\\n---------------------\\n\" +\n                  `${err}\\n` +\n                  \"Please check your function arguments\\n\" +\n                  \"--------------------------\"\n              );\n            });\n        } catch (e) {\n          console.log(e + \"--\");\n        }\n      },\n      async _compareModel(m1, m2, script) {\n        // call service _compareModel(\"catalogue1.xml\", \"catalogue2.xml\", \"Demo.ecl\")\n        try {\n          await axios\n            .post(\n              `http://back.34.107.29.78.sslip.io/api/exec/compare`,\n              {\n                model1: \"catalogue1.xml\",\n                model2: \"catalogue2.xml\",\n                scriptEcl: \"Demo.ecl\",\n              },\n              {\n                headers: {\n                  // remove headers\n                },\n              }\n            )\n            .then((response) => {\n              printConsoleOutput(\n                `\\nExecuting: \\nComparing the models...!\\n\\nCode: ${response.status} -- sucesss` +\n                  \"\\n---------------------\\n\" +\n                  response.data.message +\n                  \"\\n--------------------------\"\n              );\n            })\n            .catch((err) => {\n              printConsoleOutput(\n                \"\\nExecuting: \\nComparing the models...!\\n\" +\n                  \"\\n---------------------\\n\" +\n                  `${err}\\n` +\n                  \"Please check your function arguments\\n\" +\n                  \"--------------------------\"\n              );\n            });\n        } catch (e) {\n          console.log(e + \"--\");\n        }\n      },\n      async _queryModel(m1, metaM, script) {\n        // call service _queryModel(\"Tree.xmi\", \"Tree.ecore\", \"Demo.eol\")\n        try {\n          await axios\n            .post(\n              `http://back.34.107.29.78.sslip.io/api/exec/query`,\n              {\n                model: m1,\n                metaModel: metaM,\n                scriptEol: script,\n              },\n              {\n                headers: {\n                  // remove headers\n                },\n              }\n            )\n            .then((response) => {\n              printConsoleOutput(\n                `\\nExecuting: \\nQuerying the model...!\\n\\nCode: ${response.status} -- sucesss` +\n                  \"\\n---------------------\\n\" +\n                  response.data.message +\n                  \"--------------------------\"\n              );\n            })\n            .catch((err) => {\n              printConsoleOutput(\n                \"\\nExecuting: \\nQuerying the model...!\\n\" +\n                  \"\\n---------------------\\n\" +\n                  `${err}\\n` +\n                  \"Please check your function arguments\\n\" +\n                  \"--------------------------\"\n              );\n            });\n        } catch (e) {\n          console.log(e + \"--\");\n        }\n      },\n      async _mergeModels(model1, model2, eclscript, etlscript) {\n        // call service _mergeModels(\"catalogue1.xml\", \"catalogue2.xml\", \"catalogues.ecl\", \"catalogues.eml\")\n        try {\n          await axios\n            .post(\n              `http://back.34.107.29.78.sslip.io/api/exec/merge`,\n              {\n                mod1: model1,\n                mod2: model2,\n                ecl: eclscript,\n                etl: etlscript,\n              },\n              {\n                headers: {\n                  // remove headers\n                },\n              }\n            )\n            .then((response) => {\n              printConsoleOutput(\n                `\\nExecuting: \\nMerging models ${model1}, ${model2}...!\\n\\nCode: ${response.status} -- sucesss` +\n                  \"\\n---------------------\\n\" +\n                  response.data.message +\n                  \"--------------------------\"\n              );\n            })\n            .catch((err) => {\n              printConsoleOutput(\n                `\\nExecuting: \\nMerging models ${model1}, ${model2}...!\\n` +\n                  \"\\n---------------------\\n\" +\n                  `${err}\\n` +\n                  \"Please check your function arguments\\n\" +\n                  \"--------------------------\"\n              );\n            });\n        } catch (e) {\n          console.log(e + \"--\");\n        }\n      },\n      scrollToBottom() {\n        try {\n          this.consoleOutputDOM.lastElementChild.scrollIntoView();\n        } catch (err) {\n          console.log(\"ConsoleView - scrollToBottom: \" + err);\n        }\n      },\n    },\n  };\n</script>\n\n<style>\n  @import url(\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\");\n\n  :root {\n    --light-grey: #e0e0e0;\n    --grey: #4d4a4a;\n  }\n\n  i {\n    cursor: pointer;\n    height: 1em;\n    width: 1em;\n  }\n\n  #console-output {\n    flex-grow: 1;\n    padding-left: 0.5em;\n  }\n\n  #console-output code {\n    white-space: pre-wrap;\n    overflow: auto;\n  }\n\n  .autoscroll {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n  }\n\n  .timestamp {\n    font-weight: bold;\n    color: var(--grey);\n  }\n\n  pre {\n    white-space: pre-line;\n    margin: 0;\n    margin-top: -1em;\n  }\n\n  .console_settings {\n    flex-grow: 1;\n    flex-wrap: nowrap;\n    flex-direction: row;\n    display: flex;\n    align-items: center;\n  }\n\n  .console_settings small {\n    padding-top: 3px;\n  }\n\n  .console_settings > * {\n    margin-left: 0.5em;\n  }\n\n  .console_header {\n    padding-left: 0.5em;\n    position: sticky;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 2em;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    background-color: var(--light-grey);\n    line-height: 1em;\n\n  }\n\n  .console_title {\n    padding-top: 3px;\n    color: var(--grey);\n  }\n\n  .console_header_filler {\n    display: flex;\n    flex-grow: 1;\n    padding-right: 3em;\n    justify-content: flex-end;\n    flex-direction: row;\n  }\n\n  .console {\n    display: flex;\n    flex-direction: column;\n    overflow-y: hidden;\n  }\n</style>\n"],"sourceRoot":"src/components"}]}