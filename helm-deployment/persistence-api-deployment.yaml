---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    service: persistence-api-claim0
  name: persistence-api-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    service: persistence-api-claim1
  name: persistence-api-claim1
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: persistence-api
spec:
  replicas: 1
  selector:
    matchLabels:
      service: persistence-api
  template:
    metadata:
      labels:
        service: persistence-api
    spec:
      containers:
        - args:
            - bash
            - -c
            - sleep 130 && npm run server
          image: indamutsa/persistence-api:be946e4e
          name: persistence
          ports:
            - containerPort: 3200
          resources:
            limits:
              cpu: "1"
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          volumeMounts:
            - mountPath: /app
              name: persistence-api-claim0
            - mountPath: /usr/src/app/node_modules
              name: persistence-api-claim1
      restartPolicy: OnFailure
      volumes:
        - name: persistence-api-claim0
          persistentVolumeClaim:
            claimName: persistence-api-claim0
        - name: persistence-api-claim1
          persistentVolumeClaim:
            claimName: persistence-api-claim1

---
apiVersion: v1
kind: Service
metadata:
  name: persistence-api
spec:
  ports:
    - name: "3200"
      port: 3200
      targetPort: 3200
  selector:
    service: persistence-api
status:
  loadBalancer: {}
