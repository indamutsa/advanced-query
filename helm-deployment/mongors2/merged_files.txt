apiVersion: v1
kind: Pod
metadata:
  annotations:
    kompose.cmd: kompose convert -o ./helm-deployment/
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.network/advanced-query-search-engine: "true"
    io.kompose.service: mongors2n1
  name: mongors2n1
spec:
  containers:
    - args:
        - mongod
        - --shardsvr
        - --replSet
        - mongors2
        - --dbpath
        - /data/db
        - --port
        - "27017"
        - --bind_ip_all
      env:
        - name: TERM
          value: xterm
      image: indamutsa/mongo:$IMAGE_TAG
      name: mongors2n1
      ports:
        - containerPort: 27017
      resources: {}
      volumeMounts:
        - mountPath: /data/db
          name: mongors2n1-claim0
  restartPolicy: OnFailure
  volumes:
    - name: mongors2n1-claim0
      persistentVolumeClaim:
        claimName: mongors2n1-claim0
status: {}




apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: mongors2n1-claim0
  name: mongors2n1-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}




apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -o ./helm-deployment/
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: mongors2n1
  name: mongors2n1
spec:
  ports:
    - name: "27047"
      port: 27047
      targetPort: 27017
    - name: "27017"
      port: 27017
      targetPort: 27017
  selector:
    io.kompose.service: mongors2n1
status:
  loadBalancer: {}




apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: mongors2n2-claim0
  name: mongors2n2-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}




apiVersion: v1
kind: Pod
metadata:
  annotations:
    kompose.cmd: kompose convert -o ./helm-deployment/
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.network/advanced-query-search-engine: "true"
    io.kompose.service: mongors2n2
  name: mongors2n2
spec:
  containers:
    - args:
        - mongod
        - --shardsvr
        - --replSet
        - mongors2
        - --dbpath
        - /data/db
        - --port
        - "27017"
        - --bind_ip_all
      env:
        - name: TERM
          value: xterm
      image: indamutsa/mongo:$IMAGE_TAG
      name: mongors2n2
      ports:
        - containerPort: 27017
      resources: {}
      volumeMounts:
        - mountPath: /data/db
          name: mongors2n2-claim0
  restartPolicy: OnFailure
  volumes:
    - name: mongors2n2-claim0
      persistentVolumeClaim:
        claimName: mongors2n2-claim0
status: {}




apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -o ./helm-deployment/
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: mongors2n2
  name: mongors2n2
spec:
  ports:
    - name: "27057"
      port: 27057
      targetPort: 27017
    - name: "27017"
      port: 27017
      targetPort: 27017
  selector:
    io.kompose.service: mongors2n2
status:
  loadBalancer: {}




apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: mongors2n3-claim0
  name: mongors2n3-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}




apiVersion: v1
kind: Pod
metadata:
  annotations:
    kompose.cmd: kompose convert -o ./helm-deployment/
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.network/advanced-query-search-engine: "true"
    io.kompose.service: mongors2n3
  name: mongors2n3
spec:
  containers:
    - args:
        - mongod
        - --shardsvr
        - --replSet
        - mongors2
        - --dbpath
        - /data/db
        - --port
        - "27017"
        - --bind_ip_all
      env:
        - name: TERM
          value: xterm
      image: indamutsa/mongo:$IMAGE_TAG
      name: mongors2n3
      ports:
        - containerPort: 27017
      resources: {}
      volumeMounts:
        - mountPath: /data/db
          name: mongors2n3-claim0
  restartPolicy: OnFailure
  volumes:
    - name: mongors2n3-claim0
      persistentVolumeClaim:
        claimName: mongors2n3-claim0
status: {}




apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -o ./helm-deployment/
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: mongors2n3
  name: mongors2n3
spec:
  ports:
    - name: "27067"
      port: 27067
      targetPort: 27017
    - name: "27017"
      port: 27017
      targetPort: 27017
  selector:
    io.kompose.service: mongors2n3
status:
  loadBalancer: {}




