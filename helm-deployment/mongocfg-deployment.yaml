apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongocfg1
  name: mongocfg1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongocfg1
  template:
    metadata:
      labels:
        app: mongocfg1
    spec:
      containers:
        - args:
            - mongod
            - --configsvr
            - --replSet
            - mongors1conf
            - --dbpath
            - /data/db
            - --port
            - "27017"
            - --bind_ip_all
          env:
            - name: TERM
              value: xterm
          image: indamutsa/mongo:be946e4e
          name: mongocfg1
          ports:
            - containerPort: 27017
          resources:
            limits:
              cpu: "1"
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          volumeMounts:
            - mountPath: /data/db
              name: mongocfg1-claim0
      restartPolicy: OnFailure
      volumes:
        - name: mongocfg1-claim0
          persistentVolumeClaim:
            claimName: mongocfg1-claim0
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongocfg1-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mongocfg1
  name: mongocfg1
spec:
  ports:
    - name: "27017"
      port: 27017
      targetPort: 27017
  selector:
    app: mongocfg1
status:
  loadBalancer: {}

---
# Mongocfg2
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongocfg2
  name: mongocfg2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongocfg2
  template:
    metadata:
      labels:
        app: mongocfg2
    spec:
      containers:
        - args:
            - mongod
            - --configsvr
            - --replSet
            - mongors1conf
            - --dbpath
            - /data/db
            - --port
            - "27017"
            - --bind_ip_all
          env:
            - name: TERM
              value: xterm
          image: indamutsa/mongo:be946e4e
          name: mongocfg2
          ports:
            - containerPort: 27017
          resources:
            limits:
              cpu: "1"
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          volumeMounts:
            - mountPath: /data/db
              name: mongocfg2-claim0
      restartPolicy: OnFailure
      volumes:
        - name: mongocfg2-claim0
          persistentVolumeClaim:
            claimName: mongocfg2-claim0

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongocfg2-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mongocfg2
  name: mongocfg2
spec:
  ports:
    - name: "27017"
      port: 27017
      targetPort: 27017
  selector:
    app: mongocfg2
status:
  loadBalancer: {}

---
# Mongocfg3
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongocfg3
  name: mongocfg3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongocfg3
  template:
    metadata:
      labels:
        app: mongocfg3
    spec:
      containers:
        - args:
            - mongod
            - --configsvr
            - --replSet
            - mongors1conf
            - --dbpath
            - /data/db
            - --port
            - "27017"
            - --bind_ip_all
          env:
            - name: TERM
              value: xterm
          image: indamutsa/mongo:be946e4e
          name: mongocfg3
          ports:
            - containerPort: 27017
          resources:
            limits:
              cpu: "1"
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          volumeMounts:
            - mountPath: /data/db
              name: mongocfg3-claim0
      restartPolicy: OnFailure
      volumes:
        - name: mongocfg3-claim0
          persistentVolumeClaim:
            claimName: mongocfg3-claim0

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongocfg3-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mongocfg3
  name: mongocfg3
spec:
  ports:
    - name: "27017"
      port: 27017
      targetPort: 27017
  selector:
    app: mongocfg3
status:
  loadBalancer: {}
# apiVersion: v1
# kind: Pod
# metadata:
#   annotations:
#     kompose.cmd: kompose convert -o ./helm-deployment/
#     kompose.version: 1.28.0 (c4137012e)
#   creationTimestamp: null
#   labels:
#     io.kompose.network/advanced-query-search-engine: "true"
#     io.kompose.service: mongocfg1
#   name: mongocfg1
# spec:
#   containers:
#     - args:
#         - mongod
#         - --configsvr
#         - --replSet
#         - mongors1conf
#         - --dbpath
#         - /data/db
#         - --port
#         - "27017"
#         - --bind_ip_all
#       env:
#         - name: TERM
#           value: xterm
#       image: indamutsa/mongo:be946e4e
#       name: mongocfg1
#       ports:
#         - containerPort: 27017
#       resources: {}
#       volumeMounts:
#         - mountPath: /data/db
#           name: mongocfg1-claim0
#   restartPolicy: OnFailure
#   volumes:
#     - name: mongocfg1-claim0
#       persistentVolumeClaim:
#         claimName: mongocfg1-claim0
# status: {}

# apiVersion: v1
# kind: Pod
# metadata:
#   annotations:
#     kompose.cmd: kompose convert -o ./helm-deployment/
#     kompose.version: 1.28.0 (c4137012e)
#   creationTimestamp: null
#   labels:
#     io.kompose.network/advanced-query-search-engine: "true"
#     io.kompose.service: mongocfg1
#   name: mongocfg1
# spec:
#   containers:
#     - args:
#         - mongod
#         - --configsvr
#         - --replSet
#         - mongors1conf
#         - --dbpath
#         - /data/db
#         - --port
#         - "27017"
#         - --bind_ip_all
#       env:
#         - name: TERM
#           value: xterm
#       image: indamutsa/mongo:be946e4e
#       name: mongocfg1
#       ports:
#         - containerPort: 27017
#       resources: {}
#       volumeMounts:
#         - mountPath: /data/db
#           name: mongocfg1-claim0
#   restartPolicy: OnFailure
#   volumes:
#     - name: mongocfg1-claim0
#       persistentVolumeClaim:
#         claimName: mongocfg1-claim0
# status: {}
