apiVersion: v1
kind: Pod
metadata:
  annotations:
    kompose.cmd: kompose convert -o ./helm-deployment/
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.network/advanced-query-search-engine: "true"
    io.kompose.service: monstache
  name: monstache
spec:
  containers:
    - args:
        - -f
        - monstache.config.toml
      image: indamutsa/monstache:$IMAGE_TAG
      livenessProbe:
        exec:
          command:
            - wget -q -O - http://monstache:8080/healthz
        failureThreshold: 300
        periodSeconds: 1
        timeoutSeconds: 30
      name: monstache
      ports:
        - containerPort: 8080
      resources: {}
      workingDir: /app
  restartPolicy: OnFailure
status: {}




apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -o ./helm-deployment/
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: monstache
  name: monstache
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
  selector:
    io.kompose.service: monstache
status:
  loadBalancer: {}




apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: persistence-api-claim0
  name: persistence-api-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}




apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: persistence-api-claim1
  name: persistence-api-claim1
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}




apiVersion: v1
kind: Pod
metadata:
  annotations:
    kompose.cmd: kompose convert -o ./helm-deployment/
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.network/advanced-query-search-engine: "true"
    io.kompose.service: persistence-api
  name: persistence-api
spec:
  containers:
    - args:
        - bash
        - -c
        - sleep 130 && npm run server
      image: indamutsa/persistence-api:$IMAGE_TAG
      name: persistence
      ports:
        - containerPort: 3200
      resources: {}
      volumeMounts:
        - mountPath: /app
          name: persistence-api-claim0
        - mountPath: /usr/src/app/node_modules
          name: persistence-api-claim1
  restartPolicy: OnFailure
  volumes:
    - name: persistence-api-claim0
      persistentVolumeClaim:
        claimName: persistence-api-claim0
    - name: persistence-api-claim1
      persistentVolumeClaim:
        claimName: persistence-api-claim1
status: {}




apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -o ./helm-deployment/
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: persistence-api
  name: persistence-api
spec:
  ports:
    - name: "3200"
      port: 3200
      targetPort: 3200
  selector:
    io.kompose.service: persistence-api
status:
  loadBalancer: {}




apiVersion: v1
kind: Pod
metadata:
  annotations:
    kompose.cmd: kompose convert -o ./helm-deployment/
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.network/advanced-query-search-engine: "true"
    io.kompose.service: query-engine
  name: query-engine
spec:
  containers:
    - image: indamutsa/query-engine:$IMAGE_TAG
      name: query-engine
      ports:
        - containerPort: 3300
      resources: {}
  restartPolicy: OnFailure
status: {}




apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -o ./helm-deployment/
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: query-engine
  name: query-engine
spec:
  ports:
    - name: "3300"
      port: 3300
      targetPort: 3300
  selector:
    io.kompose.service: query-engine
status:
  loadBalancer: {}




apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -o ./helm-deployment/
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: setup-rs
  name: setup-rs
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: setup-rs
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -o ./helm-deployment/
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/advanced-query-search-engine: "true"
        io.kompose.service: setup-rs
    spec:
      containers:
        - image: indamutsa/setup:$IMAGE_TAG
          name: setup-rs
          resources: {}
      restartPolicy: Always
status: {}




