# Build, Test, and Push Docker Images
name: Continuous Integration for the MDEForge-Search

on:
  push:
    branches:
      - main # or the branch you want to build on

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        es-bundle:
          - name: elasticsearch
            path: elastic-bundle/elasticsearch
            dockerfile: Dockerfile
          - name: logstash
            path: elastic-bundle/logstash
            dockerfile: Dockerfile
          - name: kibana
            path: elastic-bundle/kibana
            dockerfile: Dockerfile
          - name: filebeat
            path: elastic-bundle/filebeat
            dockerfile: Dockerfile

    steps:
      # Checkout the repo
      - name: Checkout code
        uses: actions/checkout@v2

      # Get the short SHA, it will be used to tag the image
      - name: Get the short SHA
        run: echo "SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      # Build the image
      - name: Set up Docker Buildx
        uses: actions/checkout@v3

      # - name: Build ${{ matrix.es-bundle.name }}
      #   run: |
      #     IMAGE_NAME=${{ matrix.es-bundle.name }}
      #     IMAGE_TAG=${{ env.SHA }}
      #     docker build ./${{ matrix.es-bundle.path }} --tag $IMAGE_NAME:$IMAGE_TAG

      - name: Build ${{ matrix.es-bundle.name }} with Buildx
        run: |
          for item in ${{ matrix.es-bundle }}; do
            echo $item[path]
          done
          docker images

      # Start the Elasticsearch container
      # - name: Start Elasticsearch
      #   run: |
      #     docker run -d \
      #       --name ${{ matrix.es-bundle.name }} \
      #       -v elasticsearch:/usr/share/elasticsearch/data \
      #       -p 9200:9200 \
      #       -p 9300:9300 \
      #       -e "ES_JAVA_OPTS=-Xmx256m -Xms256m" \
      #       -e "ELASTIC_USERNAME=elastic" \
      #       -e "ELASTIC_PASSWORD=changeme" \
      #       -e "discovery.type=single-node" \
      #       --health-cmd="curl --silent --fail http://localhost:9200/_cluster/health || exit 1" \
      #       --health-interval=30s \
      #       --health-timeout=30s \
      #       --health-retries=5 \
      #       --restart=on-failure \
      #       ${{ matrix.es-bundle.name }}:${{ env.SHA }}

      # # Wait for Elasticsearch and test the endpoint
      # - name: Check cluster health
      #   run: |
      #     sleep 25

      #     status_code=$(curl -u elastic:changeme --write-out '%{http_code}' --silent --output /dev/null http://localhost:9200/_cluster/health)
      #     echo "Elasticsearch health check returned status $status_code"

      #     if [ "$status_code" != "200" ]; then
      #       echo "Error: Elasticsearch health check failed with status $status_code"
      #       exit 1
      #     fi
      # # -----------------------------------
      # # Log into Docker Hub
      # - name: Log into Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # # Push the image to Docker Hub
      # - name: Push ${{ matrix.es-bundle.name }}
      #   run: |
      #     IMAGE_NAME=${{ matrix.es-bundle.name }}
      #     IMAGE_TAG=${{ env.SHA }}
      #     IMAGE_ID=docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/$IMAGE_NAME
      #     docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_ID:$IMAGE_TAG
      #     docker push $IMAGE_ID:$IMAGE_TAG
